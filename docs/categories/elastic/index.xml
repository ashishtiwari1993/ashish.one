<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Elastic on ashish.one</title>
    <link>https://ashish.one/categories/elastic/</link>
    <description>Recent content in Elastic on ashish.one</description>
    <image>
      <title>ashish.one</title>
      <url>https://www.gravatar.com/avatar/dcb52889deff3e5017a18de40c57add8?s=200</url>
      <link>https://www.gravatar.com/avatar/dcb52889deff3e5017a18de40c57add8?s=200</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2024 20:39:59 +0530</lastBuildDate>
    <atom:link href="https://ashish.one/categories/elastic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert json to nd-json for elasticsearch</title>
      <link>https://ashish.one/gist/json-to-ndjson-elasticsearch/</link>
      <pubDate>Fri, 29 Mar 2024 20:29:51 +0530</pubDate>
      <guid>https://ashish.one/gist/json-to-ndjson-elasticsearch/</guid>
      <description>Convert JSON to nd-json for bulk indexing into Elasticsearch.
movies.json [ { &amp;#34;title_x&amp;#34;: &amp;#34;Student of the Year 2&amp;#34;, &amp;#34;imdb_id&amp;#34;: &amp;#34;tt7255568&amp;#34;, &amp;#34;poster_path&amp;#34;: &amp;#34;https://upload.wikimedia.org/wikipedia/en/thumb/3/3c/Student_of_the_year_2_Poster.jpg/220px-Student_of_the_year_2_Poster.jpg&amp;#34;, &amp;#34;wiki_link&amp;#34;: &amp;#34;https://en.wikipedia.org/wiki/Student_of_the_Year_2&amp;#34;, &amp;#34;title_y&amp;#34;: &amp;#34;Student of the Year 2&amp;#34;, &amp;#34;original_title&amp;#34;: &amp;#34;Student of the Year 2&amp;#34;, &amp;#34;is_adult&amp;#34;: 0, &amp;#34;year_of_release&amp;#34;: &amp;#34;2019&amp;#34;, &amp;#34;runtime&amp;#34;: &amp;#34;146&amp;#34;, &amp;#34;genres&amp;#34;: &amp;#34;Drama|Romance|Sport&amp;#34;, &amp;#34;imdb_rating&amp;#34;: 2.5, &amp;#34;imdb_votes&amp;#34;: 12671, &amp;#34;story&amp;#34;: &amp;#34;A student must face off against bullies and overcome hurdles both academic and romantic to win his college&amp;#39;s coveted Student of the Year trophy.</description>
      <content:encoded><![CDATA[<p>Convert JSON to nd-json for bulk indexing into Elasticsearch.</p>
<h3 id="moviesjson">movies.json</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Student of the Year 2&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt7255568&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/3/3c/Student_of_the_year_2_Poster.jpg/220px-Student_of_the_year_2_Poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Student_of_the_Year_2&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Student of the Year 2&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Student of the Year 2&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;146&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Drama|Romance|Sport&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">2.5</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">12671</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;A student must face off against bullies and overcome hurdles  both academic and romantic  to win his college&#39;s coveted Student of the Year trophy.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;A student must face off against bullies and overcome hurdles  both academic and romantic  to win his college&#39;s coveted Student of the Year trophy.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Tiger Shroff|Ananya Panday|Tara Sutaria|Aditya Seal|Manoj Pahwa|Ayesha Raza|Rajesh Kumar|Manasi Joshi Roy|Samir Soni|Gul Panag|Manjot Singh|Sahil Anand|Harsh Beniwal|Daljeet Singh Gujral|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;10 May 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;De De Pyaar De&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt8647400&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/c/c4/De_De_Pyaar_De_Poster.jpg/220px-De_De_Pyaar_De_Poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/De_De_Pyaar_De&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;De De Pyaar De&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;De De Pyaar De&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;135&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Comedy|Romance&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">6.6</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">5387</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;a 50 year old Aashish living London away from his family fro many years He falls in love with a 26 year Ayesha.Thou officially not divorced from his first wife Manju.Aashish wants her permission to get married to Ayesha.Upon reaching his house in India  Ayesha finds that Aashish kids are of the same age as her.Aashish introduces Ayesha as his secretary to his family he also finds that his daughter is about to get married and VK whose become close family friend is trying to woo her Manju.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;A 50-year-old single father faces disapproval from his family and his ex-wife when he falls in love with a 26-year-old woman.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Ajay Devgn|Tabu|Rakul Preet Singh|Jimmy Sheirgill|Alok Nath|Madhumalti Kapoor|Harry Anton|Gergo Baranyi|Sammy John Heaney|Bhavin Bhanushali|Gandharv Dewan|Gulnaaz Khan|Kumud Mishra|Sunny Singh Nijjar|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;17 May 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;India&#39;s Most Wanted (film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt8484942&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/a/ae/India%27s_Most_Wanted_poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/India%27s_Most_Wanted_(film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;India&#39;s Most Wanted&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;India&#39;s Most Wanted&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;123&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Action|Thriller&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">4.4</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">1449</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;India&#39;s Most Wanted is a Bollywood action thriller film directed by Raj Kumar Gupta and starring Arjun Kapoor. The film is about tracking a terrorist in a secret mission and arresting him without firing bullets. It pays tribute to unsung heroes of our society.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;A group of intelligence officers embark on a top secret mission to track down a wanted international criminal.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Arjun Kapoor|Sudev Nair|Rajesh Sharma|Prasanth|Santilal Mukherjee|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;24 May 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Yeh Hai India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt5525846&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/d/db/Yeh_Hai_India_Official_Poster.jpg/220px-Yeh_Hai_India_Official_Poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Yeh_Hai_India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Yeh Hai India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Yeh Hai India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2017&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;128&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Action|Adventure|Drama&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">5.7</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">169</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;Yeh Hai India  follows the story of a 25 years old NRI  who is born and brought up in U.K and shares the same stereotype views of India  which is known for its vast population  pollution and poverty. However protagonist finds new development in media or probably an &#39;other side of same coin&#39; of India  which is also known for successful mars mission in first attempt  a nation which proudly holds title &#39;God of Cricket&#39; for Sachin Tendulkar  who is again an Indian and a nation which is known for its holy generosity with icons like Mother Teresa\&#34;.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;Yeh Hai India  follows the story of a 25 years old NRI  who is born and brought up in UK. He shares the same stereotypical views about India that most NRIs have and how his perception changes.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;A Film for Every Indian&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Gavie Chahal|Mohan Agashe|Mohan Joshi|Lom Harsh|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;2 wins &amp; 1 nomination&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;24 May 2019 (India)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Kabir Singh&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt8983202&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/d/dc/Kabir_Singh.jpg/220px-Kabir_Singh.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Kabir_Singh&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Kabir Singh&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Kabir Singh&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;173&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Drama|Romance&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">7.2</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">20535</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;This Sandeep Vanga directorial is a remake of the 2017 Telugu movie Arjun Reddy. The plot revolves around an alcoholic surgeon battling temper issues. Things get worse as he watches the love of his life marry another man. High on emotions coupled with impressive action the film promises an intense watch.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;Kabir Singh is a remake of a Telugu movie Arjun Reddy (2017)  where a short-tempered house surgeon gets used to drugs and drinks when his girlfriend is forced to marry another person.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Shahid Kapoor|Kiara Advani|Soham Majumdar|Arjan Bajwa|Suresh Oberoi|Kamini Kaushal|Adil Hussain|Nikita Dutta|Amit Sharma|Anurag Arora|Dolly Mattoo|Aanchal Chauhan|Suparna Marwah|Swati Seth|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;20 June 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Article 15 (film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt10324144&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/1/11/Article_15_Poster.jpg/220px-Article_15_Poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Article_15_(film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Article 15&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Article 15&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;130&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Crime|Drama&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">8.3</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">13417</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;In the rural heartlands of India  an upright police officer sets out on a crusade against violent caste-based crimes and discrimination.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;In the rural heartlands of India  an upright police officer sets out on a crusade against violent caste-based crimes and discrimination.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;Farq Bahut Kar Liya| Ab Farq Laayenge.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Ayushmann Khurrana|Nassar|Manoj Pahwa|Kumud Mishra|Isha Talwar|Sayani Gupta|Mohammed Zeeshan Ayyub|Subhrajyoti Barat|Sushil Pandey|Aakash Dabhade|Ashish Verma|Ronjini Chakraborty|Veen|Sumbul Touqueer|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;1 win&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;28 June 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;One Day: Justice Delivered&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt8130558&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/f/f7/One_Day-_Justice_Delivered.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/One_Day:_Justice_Delivered&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;One Day: Justice Delivered&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;One Day: Justice Delivered&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;124&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Action|Crime|Thriller&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">6.8</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">590</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;A Crime Branch Special Officer Investigates the Serial disappearance of high profile individuals in a state capital.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;A Crime Branch Special Officer Investigates the Serial disappearance of high profile individuals in a state capital.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Anupam Kher|Kumud Mishra|Esha Gupta|Zakir Hussain|Rajesh Sharma|Murli Sharma|Deepshika Nagpal|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;5 July 2019 (India)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Super 30 (film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt7485048&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/2/29/Super_30_The_Film.jpg/220px-Super_30_The_Film.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Super_30_(film)&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Super 30&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Super 30&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;154&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Biography|Drama&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">8.2</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">13972</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;Anand Kumar  a Mathematics genius from a modest family in Bihar who is made to believe that only a King&#39;s son can become a king is on a mission to prove that even the poor man can create some of the world&#39;s most genius minds. He starts a training program named &#39;Super 30&#39; to help 30 IIT aspirants crack the entrance test and make them highly successful professionals.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;Based on life of Patna-based mathematician Anand Kumar who runs the famed Super 30 program for IIT aspirants in Patna.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;Inspired by the Life of Anand Kumar &amp; His Students&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Hrithik Roshan|Mrunal Thakur|Nandish Singh|Virendra Saxena|Sadhana Singh|Aditya Srivastava|Sanket Deshpande|Pankaj Tripathi|Vaibhav Gupta|Ali Haji|Rajesh Sharma|Deepali Kumar|Chittaranjan Giri|Ganesh Kumar|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;12 July 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Batla House&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt8869978&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/e/ed/Batla_House_poster.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Batla_House&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Batla House&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Batla House&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;146&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Action|Drama|Thriller&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">7.3</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">5556</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;This action thriller is based on the real-life incident of &#39;Batla House Encounter&#39;  officially known as Operation Batla House  to the silver screen. The incident took place on September 19  2008  against Indian Mujahideen (IM) terrorists in Batla House locality in Jamia Nagar  Delhi.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;After a deadly encounter  a police officer works to prove that the police acted lawfully.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;The Story of India&#39;s Most Decorated / Controversial Cop&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;John Abraham|Nora Fatehi|Mrunal Thakur|Rajesh Sharma|Ravi Kishan|Sonam Arora|Sahidur Rahaman|Manish Chaudhary|Anil Rastogi|Kranti Prakash Jha|Amruta Sant|Anil Khopkar|Aditi Gulati|Jitendra Trehan|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;15 August 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_x&#34;</span>: <span style="color:#e6db74">&#34;Mission Mangal&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_id&#34;</span>: <span style="color:#e6db74">&#34;tt9248972&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;poster_path&#34;</span>: <span style="color:#e6db74">&#34;https://upload.wikimedia.org/wikipedia/en/thumb/b/b7/Mission_Mangal.jpg/220px-Mission_Mangal.jpg&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wiki_link&#34;</span>: <span style="color:#e6db74">&#34;https://en.wikipedia.org/wiki/Mission_Mangal&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;title_y&#34;</span>: <span style="color:#e6db74">&#34;Mission Mangal&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;original_title&#34;</span>: <span style="color:#e6db74">&#34;Mission Mangal&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;is_adult&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;year_of_release&#34;</span>: <span style="color:#e6db74">&#34;2019&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;runtime&#34;</span>: <span style="color:#e6db74">&#34;130&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;genres&#34;</span>: <span style="color:#e6db74">&#34;Drama|History&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_rating&#34;</span>: <span style="color:#ae81ff">6.5</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;imdb_votes&#34;</span>: <span style="color:#ae81ff">7165</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;story&#34;</span>: <span style="color:#e6db74">&#34;Based on true events of the Indian Space Research Organisation (ISRO) successfully launching the Mars Orbiter Mission (Mangalyaan)  making it the least expensive mission to Mars.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;summary&#34;</span>: <span style="color:#e6db74">&#34;Based on true events of the Indian Space Research Organisation (ISRO) successfully launching the Mars Orbiter Mission (Mangalyaan)  making it the least expensive mission to Mars.&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tagline&#34;</span>: <span style="color:#e6db74">&#34;This Independence Day...The Sky is Not the Limit&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;actors&#34;</span>: <span style="color:#e6db74">&#34;Akshay Kumar|Vidya Balan|Nithya Menon|Taapsee Pannu|Sonakshi Sinha|Kirti Kulhari|H.G. Dattatreya|Sharman Joshi|Sanjay Kapoor|Dalip Tahil|Vikram Gokhale|Mohammed Zeeshan Ayyub|Purab Kohli|&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;wins_nominations&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;release_date&#34;</span>: <span style="color:#e6db74">&#34;15 August 2019 (USA)&#34;</span>
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><p>Install <code>jq</code> on your linux machine and hit below command</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cat movies.json | <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>jq -c <span style="color:#e6db74">&#39;.[] | {&#34;index&#34;: {&#34;_index&#34;: &#34;movies&#34;, &#34;_id&#34;: .id}}, .&#39;</span> &gt; nd-movies.json
</span></span></code></pre></div><p>Verify newly created <code>nd-movies.json</code> file.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Setup &amp; Observe Kubernetes cluster</title>
      <link>https://ashish.one/talks/setup_and_observe_kubernetes/</link>
      <pubDate>Thu, 28 Mar 2024 21:41:03 +0530</pubDate>
      <guid>https://ashish.one/talks/setup_and_observe_kubernetes/</guid>
      <description>Introduction In this gist we will quickly spin a sample Kubernetes cluster and deploying the nginx pod. Additionally, we will implement monitoring using Elastic.
Setup K8s cluster Cluster architecture 3 Node cluster
Machine - Centos7, 4GB RAM
kube1.local - Control plane node kube2.local - worker node kube3.local - worker node Here I am setting hostname kube1.local, kube2.local, kube3.local. Login into all of the servers and perform below command on all three nodes.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>In this gist we will quickly spin a sample Kubernetes cluster and deploying the nginx pod. Additionally, we will implement monitoring using Elastic.</p>
<h1 id="setup-k8s-cluster">Setup K8s cluster</h1>
<h2 id="cluster-architecture">Cluster architecture</h2>
<p>3 Node cluster</p>
<p>Machine - Centos7, 4GB RAM</p>
<ol>
<li>kube1.local  - Control plane node</li>
<li>kube2.local - worker node</li>
<li>kube3.local - worker node</li>
</ol>
<p>Here I am setting hostname <code>kube1.local</code>, <code>kube2.local</code>, <code>kube3.local</code>.  Login into all of the servers and perform below command on all three nodes.</p>
<h2 id="swap-off">Swap off</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>sudo swapoff -a
</span></span></code></pre></div><h2 id="install-docker">Install docker</h2>
<p>You can refer <a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">docker documentation</a>
 but here are the quick steps:</p>
<h2 id="contanerd-runtime">Contanerd runtime</h2>
<p>kubeadm automatically tries to detect an installed container runtime by scanning through a list of known endpoints.</p>
<p>Verify if containerd is running or not</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ps -ef | grep containerd
</span></span></code></pre></div><p>In my system containerd was running. <a href="https://github.com/containerd/containerd/blob/main/docs/getting-started.md" target="_blank" rel="noopener">Install containerd</a>
 if it is not installed.</p>
<p>Change below cofing to remove <code>cri</code> from <code>disable_plugins</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>sudo vim /etc/containerd/config.toml
</span></span><span style="display:flex;"><span><span style="color:#75715e">#disabled_plugins = [&#34;cri&#34;]</span>
</span></span><span style="display:flex;"><span>disabled_plugins <span style="color:#f92672">=</span> <span style="color:#f92672">[]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo systemctl restart containerd
</span></span></code></pre></div><h2 id="install-kubeadm-kubelet--kubectl">Install kubeadm, kubelet &amp; kubectl</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cat <span style="color:#e6db74">&lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">[kubernetes]
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">name=Kubernetes
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">enabled=1
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">gpgcheck=1
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">EOF</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set SELinux in permissive mode (effectively disabling it)</span>
</span></span><span style="display:flex;"><span>sudo setenforce <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo sed -i <span style="color:#e6db74">&#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39;</span> /etc/selinux/config
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo yum install -y kubelet kubeadm kubectl --disableexcludes<span style="color:#f92672">=</span>kubernetes
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo systemctl enable --now kubelet
</span></span></code></pre></div><p>Make sure you install same version on all of the nodes. In my case i am installing <code>v1.28</code>.</p>
<p>Need to install all three packages on all nodes</p>
<p><strong>Kubeadm</strong> - Use to bootstrap the cluster</p>
<p><strong>Kubelet</strong> - Will run all over the machin and take care of pods and container (General operation like stop / start / modify)</p>
<p><strong>Kubectl</strong> - command line utility to talk with kubernetes APIs</p>
<h2 id="on-control-plane-node-only-kube1local">On control plane node only (kube1.local)</h2>
<p>Initialise kubeadm</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>kubeadm init
</span></span></code></pre></div><p>On success, It will print the below <code>join</code> command, which we will use to join any machine in the cluster.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>kubeadm join control_plane_ip:6443 --token tlif0t.jq7r1nvdmltre7m3 --discovery-token-ca-cert-hash sha256:02eb1a7f249b2f2a2b8db2b8fef9b5564ac3db9d42da39db71c23c06df5cecb8
</span></span></code></pre></div><p>Save this command. We need to execute this command on every worker node to join the cluster.</p>
<h2 id="on-worker-node-only-kube2local-kube3local">On worker node only (kube2.local, kube3.local)</h2>
<p>Perform join command.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>kubeadm join control_plane_ip:6443 --token tlif0t.jq7r1nvdmltre7m3 --discovery-token-ca-cert-hash sha256:02eb1a7f249b2f2a2b8db2b8fef9b5564ac3db9d42da39db71c23c06df5cecb8
</span></span></code></pre></div><p>You should see the message - “This node has joined the cluster” with addition details.</p>
<h2 id="verify-cluster-kube1local">Verify cluster (kube1.local)</h2>
<p>Enable <code>kubectl</code> to run from non root user.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>mkdir -p $HOME/.kube
</span></span><span style="display:flex;"><span>sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span></span><span style="display:flex;"><span>sudo chown <span style="color:#66d9ef">$(</span>id -u<span style="color:#66d9ef">)</span>:<span style="color:#66d9ef">$(</span>id -g<span style="color:#66d9ef">)</span> $HOME/.kube/config
</span></span></code></pre></div><p>List nodes</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>kubectl get nodes
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME          STATUS   ROLES           AGE     VERSION
</span></span><span style="display:flex;"><span>kube1.local   Ready    control-plane   199d    v1.28.1
</span></span><span style="display:flex;"><span>kube2.local   Ready    &lt;none&gt;          8m22s   v1.28.8
</span></span><span style="display:flex;"><span>kube3.local   Ready    &lt;none&gt;          199d    v1.28.1
</span></span></code></pre></div><p>Our cluster is up and running.</p>
<h1 id="deploy-nginx-kube1local">Deploy Nginx (kube1.local)</h1>
<p>Create Nginx deployment</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cat <span style="color:#e6db74">&lt;&lt;EOF | kubectl apply -f -
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">apiVersion: apps/v1
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">kind: Deployment
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">metadata:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  name: nginx-deployment
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">spec:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  selector:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    matchLabels:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      app: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  replicas: 2
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  template:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    metadata:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      labels:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        app: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    spec:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      containers:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      - name: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        image: nginx:latest
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        ports:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        - containerPort: 80
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">EOF</span>
</span></span></code></pre></div><p>Expose the Nginx deployment on a NodePort 32000</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cat <span style="color:#e6db74">&lt;&lt;EOF | kubectl apply -f -
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">apiVersion: v1
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">kind: Service
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">metadata:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  name: nginx-service
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">spec:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  selector:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    app: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  type: NodePort
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">  ports:
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    - port: 80
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      targetPort: 80
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">      nodePort: 32000
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">EOF</span>
</span></span></code></pre></div><p>Verify pod is running</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>Kubectl get pods
</span></span></code></pre></div><p>Just visit on browser - http://external_id:32000.</p>
<p>You should able to see the nginx’s default page.</p>
<h1 id="setup-observability-with-elastic">Setup Observability with Elastic</h1>
<h2 id="enable-kube-state-matrics-kube1local">Enable kube-state-matrics (kube1.local)</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>git clone https://github.com/kubernetes/kube-state-metrics
</span></span><span style="display:flex;"><span>kubectl apply -f kube-state-metrics/examples/standard/
</span></span></code></pre></div><h2 id="verify-endpoint">Verify endpoint</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>kubectl port-forward svc/kube-state-metrics -n kube-system 8080:8080
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#login to anoter tab and hit</span>
</span></span><span style="display:flex;"><span>curl localhost:8080/metrics
</span></span></code></pre></div><p>It should return all metrics.</p>
<h2 id="monitoring-using-elastic-cloud">Monitoring using Elastic cloud</h2>
<p>You can follow detailed doc - <a href="https://www.elastic.co/getting-started/observability/monitor-kubernetes-clusters" target="_blank" rel="noopener">https://www.elastic.co/getting-started/observability/monitor-kubernetes-clusters</a>
</p>
<p>Blog - <a href="https://www.elastic.co/blog/kubernetes-cluster-metrics-logs-monitoring" target="_blank" rel="noopener">https://www.elastic.co/blog/kubernetes-cluster-metrics-logs-monitoring</a>
</p>
<h1 id="reference-talk">Reference talk</h1>
<p>Bring logs, metrics, and traces from your Kubernetes cluster and the workloads running on it into a single, unified solution. Elastic observability gives better visibility on your kubernetes ecosystem where you can monitor your pods, services, workload etc. Use a centrally managed Elastic Agent to gain visibility into your Kubernetes deployments on EKS, AKS, GKE or self-managed clusters.</p>
<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/8qOt_gYjwcw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></content:encoded>
    </item>
    <item>
      <title>Elasticsearch Query Language (ES|QL)</title>
      <link>https://ashish.one/talks/esql/</link>
      <pubDate>Thu, 01 Feb 2024 10:54:52 +0530</pubDate>
      <guid>https://ashish.one/talks/esql/</guid>
      <description>Introduction ES|QL is a new query language for Elasticsearch. It is the unified language for all kinds of use cases like simple queries, aggregations, performing correlations, finding logs, etc. It provides simple easy syntax to perform complex queries. If you come from SQL background, You going to find this very handy.
It is a piped separated langugage with a combination of source commands and process commands. The Elasticsearch Query Language (ES|QL) makes use of &amp;ldquo;pipes&amp;rdquo; (|) to manipulate and transform data in a step-by-step fashion.</description>
      <content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/esql.html" target="_blank" rel="noopener">ES|QL</a>
 is a new query language for Elasticsearch. It is the unified language for all kinds of use cases like simple queries, aggregations, performing correlations, finding logs, etc. It provides simple easy syntax to perform complex queries. If you come from SQL background, You going to find this very handy.</p>
<p>It is a piped separated langugage with a combination of <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-commands.html#esql-source-commands" target="_blank" rel="noopener">source commands</a>
 and <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-commands.html#esql-processing-commands" target="_blank" rel="noopener">process</a>
 commands. The Elasticsearch Query Language (ES|QL) makes use of &ldquo;pipes&rdquo; (|) to manipulate and transform data in a step-by-step fashion. This means output of the first step will go as an input for second step.</p>
<p>ES|QL is more than langugage. The execution engine is developed by considering performance in mind. Here ES|QL is not going to convert into Query DSL instead it will be directly executed within Elasticsearch. It operates on blocks at a time instead of per row, targets vectorization and cache locality, and embraces specialization and multi-threading.</p>
<blockquote>
<p>ES|QL - Filter, Transform and Analyze</p>
</blockquote>
<h2 id="example">Example</h2>
<p>Below is a few examples of ES|QL. I am considering you have an Elasticsearch and kibana is <a href="https://www.elastic.co/search-labs/tutorials/install-elasticsearch" target="_blank" rel="noopener">installed</a>
 and running. Please <a href="https://www.elastic.co/guide/en/kibana/current/get-started.html#gs-get-data-into-kibana" target="_blank" rel="noopener">import the sample dataset (Sample web logs)</a>
 from kibana. Navigate in side menu  -&gt; <code>Management</code> -&gt; <code>Dev Tools</code>  to perform the below query.</p>
<h3 id="source-commands">Source commands</h3>
<h4 id="from">FROM</h4>
<pre tabindex="0"><code># Format

POST /_query?format=csv
{
  &#34;query&#34;: &#34;&#34;&#34;
    from kibana_sample_data_logs
  &#34;&#34;&#34;
}
</code></pre><h4 id="row">ROW</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;:&#34;&#34;&#34;
    row a = &#34;Mozilla/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko/20110421 Firefox/6.0a1&#34;
    | dissect a &#34;%{browser}/%{version}&#34;
    | keep browser
  &#34;&#34;&#34;
}
</code></pre><h4 id="show">SHOW</h4>
<pre tabindex="0"><code>POST /_query?format=txt
{
  &#34;query&#34;: &#34;&#34;&#34;
    show info
  &#34;&#34;&#34;
}
</code></pre><h3 id="processing-commands">Processing commands</h3>
<h4 id="keep">keep</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;: &#34;&#34;&#34;
    from kibana_sample_data_logs
    | keep @timestamp, clientip, host, tags, bytes
  &#34;&#34;&#34;
}
</code></pre><h4 id="where-limit-sort">where, limit, sort</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;: &#34;&#34;&#34;
    from kibana_sample_data_logs
    | keep @timestamp, clientip, host, tags, bytes
    | where bytes &gt; 1000
    | sort bytes desc
    | limit 5
  &#34;&#34;&#34;
}
</code></pre><h4 id="like">like</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;:&#34;&#34;&#34;
    FROM sample_data
    | where message like &#34;*error*&#34;
  &#34;&#34;&#34;
}
</code></pre><h4 id="grok-statsby">GROK, STATS&hellip;BY</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;:&#34;&#34;&#34;
    from kibana_sample_data_logs
    | grok agent &#34;%{WORD:browser}/%{NUMBER:version}&#34;
    | keep browser, version, @timestamp
  &#34;&#34;&#34;
}

POST _query?format=txt
{
  &#34;query&#34;:&#34;&#34;&#34;
    from kibana_sample_data_logs
    | grok agent &#34;%{WORD:browser}/%{NUMBER:version}&#34;
    | keep browser, version, @timestamp
    | stats count(*) by version
  &#34;&#34;&#34;
}
</code></pre><h4 id="dissect">DISSECT</h4>
<pre tabindex="0"><code>POST _query?format=txt
{
  &#34;query&#34;: &#34;&#34;&#34;
    from kibana_sample_data_logs 
    | dissect message &#34;%{ip} - - %{time} %{web_call} &#34;
    | keep ip, time, web_call
  &#34;&#34;&#34;
}
</code></pre><h4 id="eval">EVAL</h4>
<pre tabindex="0"><code>POST /_query?format=txt
{
  &#34;query&#34;: &#34;&#34;&#34;
    from kibana_sample_data_logs
    | eval t = replace(agent, &#34;Mozilla&#34;, &#34;Chrome&#34;)
    | eval l = length(agent)
    | dissect agent &#34;%{browser}/%{version} &#34;
    | eval lt = left(t, 6)
    | keep lt, browser, version, t, l
  &#34;&#34;&#34;
}
</code></pre><p>You can check more <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-functions-operators.html#esql-string-functions" target="_blank" rel="noopener">string functions</a>
.</p>
<h4 id="data-enrichment-enrich">Data enrichment (ENRICH)</h4>
<pre tabindex="0"><code>
# Create mappings

PUT lang
{
  &#34;mappings&#34;: {
    &#34;properties&#34;: {
      &#34;lang_id&#34;: {
        &#34;type&#34;: &#34;keyword&#34;
      },
      &#34;name&#34;: {
        &#34;type&#34;: &#34;keyword&#34;
      }
    }
  }
}

PUT devs
{
  &#34;mappings&#34;: {
    &#34;properties&#34;: {
      &#34;lang_id&#34;: {
        &#34;type&#34;: &#34;keyword&#34;
      },
      &#34;name&#34;: {
        &#34;type&#34;: &#34;keyword&#34;
      }
    }
  }
}

# Create index &#34;lang&#34;

PUT lang/_bulk
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;1x&#34;, &#34;name&#34;: &#34;java&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;2x&#34;, &#34;name&#34;: &#34;php&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;3x&#34;, &#34;name&#34;: &#34;node&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;4x&#34;, &#34;name&#34;: &#34;python&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;5x&#34;, &#34;name&#34;: &#34;ruby&#34; }

# create index &#34;devs&#34;

PUT devs/_bulk
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;5x&#34;, &#34;developer&#34;: &#34;bob&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;3x&#34;, &#34;developer&#34;: &#34;mark&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;1x&#34;, &#34;developer&#34;: &#34;max&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;2x&#34;, &#34;developer&#34;: &#34;david&#34; }
{ &#34;index&#34; : {}}
{ &#34;lang_id&#34;: &#34;4x&#34;, &#34;developer&#34;: &#34;ashish&#34; }


# Create enrich policy

PUT /_enrich/policy/dev_lang
{
  &#34;match&#34;: {
    &#34;indices&#34;: &#34;lang&#34;,
    &#34;match_field&#34;: &#34;lang_id&#34;,
    &#34;enrich_fields&#34;: [&#34;name&#34;]
  }
}

PUT /_enrich/policy/dev_lang/_execute?wait_for_completion=true

POST _query?format=txt
{
  &#34;query&#34;:&#34;&#34;&#34;
    from devs
    | keep lang_id, name, developer
    | enrich dev_lang on lang_id with name
  &#34;&#34;&#34;
}
</code></pre>]]></content:encoded>
    </item>
    <item>
      <title>Elasticsearch: Vector and Hybrid Search</title>
      <link>https://ashish.one/talks/vector-hybrid-search/</link>
      <pubDate>Tue, 29 Aug 2023 21:41:03 +0530</pubDate>
      <guid>https://ashish.one/talks/vector-hybrid-search/</guid>
      <description>Introduction Search is not just traditional TF/IDF any more but the current trend of machine learning and models has opened another dimension for search.
This talk gives an overview of:
Classic search and its limitations. What is a model and how can you use it. How to use vector search or hybrid search in Elasticsearch. Where OpenAI&amp;rsquo;s ChatGPT or similar LLMs come into play to with Elastic. Check how to leverage Leverage ChatGPT with Elasticsearch .</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>Search is not just traditional TF/IDF any more but the current trend of machine learning and models has opened another dimension for search.</p>
<p>This talk gives an overview of:</p>
<ul>
<li><strong>Classic</strong> search and its limitations.</li>
<li>What is a model and how can you use it.</li>
<li>How to use vector search or hybrid search in Elasticsearch.</li>
<li>Where OpenAI&rsquo;s ChatGPT or similar LLMs come into play to with Elastic.</li>
</ul>
<p>Check how to leverage <a href="https://ashish.one/talks/chatgpt-elasticsearch/" target="_blank" rel="noopener">Leverage ChatGPT with Elasticsearch</a>
.</p>
<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/AljarsLZRW0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></content:encoded>
    </item>
    <item>
      <title>Monitor Kubernetes cluster with Elastic</title>
      <link>https://ashish.one/talks/monitor_k8_elastic_observability/</link>
      <pubDate>Fri, 28 Jul 2023 21:41:03 +0530</pubDate>
      <guid>https://ashish.one/talks/monitor_k8_elastic_observability/</guid>
      <description>Introduction Bring logs, metrics, and traces from your Kubernetes cluster and the workloads running on it into a single, unified solution. Elastic observability gives better visibility on your kubernetes ecosystem where you can monitor your pods, services, workload etc. Use a centrally managed Elastic Agent to gain visibility into your Kubernetes deployments on EKS, AKS, GKE or self-managed clusters.
Talk Video </description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>Bring logs, metrics, and traces from your Kubernetes cluster and the workloads running on it into a single, unified solution. Elastic observability gives better visibility on your kubernetes ecosystem where you can monitor your pods, services, workload etc. Use a centrally managed Elastic Agent to gain visibility into your Kubernetes deployments on EKS, AKS, GKE or self-managed clusters.</p>
<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/8qOt_gYjwcw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></content:encoded>
    </item>
    <item>
      <title>Workshop - Leverage ChatGPT with Elasticsearch</title>
      <link>https://ashish.one/talks/chatgpt-elasticsearch/</link>
      <pubDate>Fri, 21 Jul 2023 15:52:06 +0530</pubDate>
      <guid>https://ashish.one/talks/chatgpt-elasticsearch/</guid>
      <description>Connect ChatGPT to proprietary data stores using Elasticsearch</description>
      <content:encoded><![CDATA[<h1 id="objective">Objective</h1>
<p>In this hands-on workshop, We will learn how to connect ChatGPT to proprietary data stores using Elasticsearch and build question/answer capabilities for your data. In a demo, We will quickly convert your website, FAQ, or any documentation into prompt chat where your user can directly ask a question on your data.</p>
<h1 id="flow">Flow</h1>
<p><img loading="lazy" src="/img/talks/elasticsearch-chatgpt/flow.png" alt="ChatGPT with Elasticsearch"  />
</p>
<h1 id="prerequisites">Prerequisites</h1>
<ol>
<li>
<p>You have used ChatGPT :)</p>
</li>
<li>
<p>Good to have understanding around Elasticsearch (Not mandatory, Introduction will be cover)</p>
</li>
<li>
<p>System + Internet connection</p>
</li>
<li>
<p>OpenAI account with API key - Create new one from <a href="https://platform.openai.com/account/api-keys" target="_blank" rel="noopener">https://platform.openai.com/account/api-keys</a>
. Make sure it having <a href="https://platform.openai.com/account/usage" target="_blank" rel="noopener">free credits</a>
.</p>
</li>
</ol>
<h2 id="without-local-setup">Without local setup</h2>
<ol>
<li>
<p>Google account to use <a href="https://colab.research.google.com/" target="_blank" rel="noopener">google Colab</a>
.</p>
</li>
<li>
<p><a href="https://render.com/" target="_blank" rel="noopener">Render</a>
 account.</p>
</li>
</ol>
<h2 id="local-setup">Local setup</h2>
<ol>
<li>
<p>Git - Install it from <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>
</p>
</li>
<li>
<p>Docker - Good to have. Install it from <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener">https://docs.docker.com/engine/install/</a>
.</p>
</li>
<li>
<p>Having basic python knowledge will be good.</p>
</li>
</ol>
<p>For a workshop we going to follow without local setup.</p>
<h1 id="1-setup-cluster">1. Setup cluster</h1>
<ol>
<li>
<p>Visit <a href="https://cloud.elastic.co" target="_blank" rel="noopener">cloud.elastic.co</a>
 and signup.</p>
</li>
<li>
<p>Click on <em><strong>Create deployment</strong></em>. In the pop-up, you can change the settings or leave it default.</p>
</li>
<li>
<p>We need to add machine learning instance. For that, simply click on &ldquo;<em><strong>advance settings</strong></em>&rdquo; .</p>
</li>
<li>
<p>Go to <em><strong>&ldquo;Machine Learning instances&rdquo; -&gt; click on &ldquo;Add Capacity&rdquo;</strong></em> and select at least <strong>4GB</strong> ram capacity.</p>
</li>
<li>
<p>Finally click on &ldquo;<em><strong>Create deployment</strong></em>&rdquo;.</p>
</li>
<li>
<p>Download / Copy the deployment credentials.</p>
</li>
<li>
<p>Once deployment ready, click on &ldquo;Continue&rdquo; (or click on <em><strong>Open Kibana</strong></em>). It will redirect you on kibana dashboard.</p>
</li>
</ol>
<h1 id="2-deploy-model">2. Deploy Model</h1>
<h2 id="elser-model-by-elastic-recommended">ELSER Model by Elastic (Recommended)</h2>
<p>Go to the kibana panel. Navigate to <em><strong>Menu -&gt; Machine Learning</strong></em> (In <em>Analytics</em> section). In left menu, Click on <em><strong>Trained Models</strong></em> (In <em>Model Management</em> Section).</p>
<ol>
<li>ELSER can be found in the list of trained models.</li>
<li>Click the <em><strong>Download model</strong></em> button under <em><strong>Actions</strong></em>.</li>
<li>After the download is finished, start the deployment by clicking the <em><strong>Start deployment</strong></em> button.</li>
<li>Provide a deployment ID, select the priority, and set the number of allocations and threads per allocation values.</li>
<li>Click <em><strong>Start</strong></em>.</li>
</ol>
<h2 id="third-party-model">Third party model</h2>
<p>We are going to use <a href="https://huggingface.co/sentence-transformers/all-distilroberta-v1" target="_blank" rel="noopener">all-distilroberta-v1</a>
 model hosted on a hugging face. Lets import on an elastic cluster using eland.</p>
<p><strong>Get your credentials ready</strong></p>
<ul>
<li><code>cloud_id</code> : Visit “<em><strong><a href="https://cloud.elastic.co" target="_blank" rel="noopener">cloud.elastic.co</a>
</strong></em>” -&gt; Navigate to your deployment and click on “<em><strong>manage</strong></em>”. Simply copy Cloud ID and save it.</li>
<li><code>cloud_user</code>: <code>elastic</code></li>
<li><code>cloud_password</code>: You will get it from step 1.6. If you forget to save, Simply click on <em><strong>“Action” -&gt; “Reset password”</strong></em>. (Username will be <code>elastic</code> only)</li>
<li><code>hf_model_id</code>: <code>sentence-transformers/all-distilroberta-v1</code> (Go to model <a href="https://huggingface.co/sentence-transformers/all-distilroberta-v1" target="_blank" rel="noopener">page</a>
 on huggingface &amp; copy the ID <code>sentence-transformers/all-distilroberta-v1</code>)</li>
</ul>
<p>Now there is two way, You can upload the model using <code>docker</code> as well as <code>Google colab</code>.</p>
<h3 id="using-google-colab-recommended">Using Google Colab (Recommended)</h3>
<p>Simply click on below link. It will open ready made notebook. You just need to click on <code>play</code> button to run notebood.</p>
<p><a href="https://colab.research.google.com/github/ashishtiwari1993/elasticsearch-chatgpt/blob/main/load_model_eland.ipynb" target="_blank" rel="noopener"><img loading="lazy" src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"  />
</a>
</p>
<h3 id="using-docker">Using Docker</h3>
<ol start="2">
<li>
<p>We’re going to use docker for import model to the elastic cluster</p>
<ol>
<li>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span> git clone https://github.com/elastic/eland.git 
</span></span><span style="display:flex;"><span> cd eland
</span></span></code></pre></div></li>
<li>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span> docker build -t elastic/eland .
</span></span></code></pre></div></li>
<li>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span> docker run -it --rm elastic/eland eland_import_hub_model <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>     --cloud-id &lt;cloud_id&gt; <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>     -u elastic -p &lt;elastic_cloud_password&gt; <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>     --hub-model-id sentence-transformers/all-distilroberta-v1 <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>     --task-type text_embedding <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>     --start
</span></span></code></pre></div></li>
<li>
<p>Let&rsquo;s wait till the model gets uploaded without any error.</p>
</li>
<li>
<p>Exit from <code>eland</code> folder.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cd ..
</span></span></code></pre></div></li>
</ol>
</li>
</ol>
<h3 id="verify-uploaded-model">Verify uploaded model</h3>
<p>Go to the kibana panel. Navigate to <em><strong>Menu -&gt; Machine Learning (In <code>Analytics</code> section)</strong></em>. In left menu, Click on <em><strong>Trained Models</strong></em>(<code>Model Management</code> Section). You must see your model here in the “<em><strong>Started</strong></em>” state.</p>
<p>In case if a warning message is displayed at the top of the page that says <em><strong>ML job and trained model synchronization required</strong></em>. Follow the link to <em><strong>Synchronize your jobs and trained models.</strong></em> Then click <em><strong>Synchronize</strong></em>.</p>
<h1 id="3-crawling-private-data">3. Crawling private data</h1>
<ol>
<li>Click on <em><strong>Menu -&gt; Enterprise Search -&gt; “Create an Elasticsearch index”</strong></em> button</li>
<li>Click on <em><strong>Web crawler</strong></em>.</li>
<li>Add index name (It will add prefix <em><strong>search</strong></em>) and  hit “<em><strong>Create index</strong></em>”. In my case index name is (search-ashish.one)</li>
<li>Go to “<em><strong>Pipelines</strong></em>” to create a pipeline.</li>
<li>Click “<em><strong>Copy and customize</strong></em>” in the Ingest Pipeline Box.</li>
<li>Click “<em><strong>Add Inference Pipeline</strong></em>” in the Machine Learning Inference Pipelines box.</li>
<li>Give the unique pipeline name e.g. “<em><strong>ml-inference-ashish-one</strong></em>”</li>
<li>Select a trained ML Model from the dropdown “<em><strong>sentence-transformers__all-distilroberta-v1</strong></em>” (For ELSER choose &ldquo;<em><strong>.elser_model_1</strong></em>&rdquo;)</li>
<li>Select “<em><strong>title</strong></em>” as the Source field and set “<em><strong>title-vector</strong></em>” as a destination. You can specify your own destination field name. (In case of ELSER, just select the &ldquo;<em><strong>Source</strong></em>&rdquo; field e.g <em>title, body_content</em>)</li>
<li>Let&rsquo;s click on “<em><strong>Continue</strong></em>” and move to the Test(Optional) tab.  Click on “<em><strong>Continue</strong></em>” again.</li>
<li>At the Review stage let&rsquo;s click on “<em><strong>Create pipeline</strong></em>”.</li>
<li>(Skip this for <em><strong>ELSER</strong></em>) Go to <em><strong>Menu -&gt; Management -&gt; Dev Tools</strong></em>. Let&rsquo;s create a mapping</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST &lt;index_name&gt;/_mapping
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;properties&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;&lt;vector_field_name&gt;&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;dense_vector&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;dims&#34;</span>: 768,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;index&#34;</span>: true,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;similarity&#34;</span>: <span style="color:#e6db74">&#34;dot_product&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>In my case mapping will be:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST search-ashish.one/_mapping
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;properties&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;title-vector&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;dense_vector&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;dims&#34;</span>: 768,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;index&#34;</span>: true,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;similarity&#34;</span>: <span style="color:#e6db74">&#34;dot_product&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>Paste above query in <code>cosole</code> and hit on play button.</p>
<ol start="13">
<li>Go to <em><strong>Enterprise search -&gt; indices -&gt; your_index_name -&gt; Manage Domains</strong></em>. Enter the domain (e.g. <a href="https://ashish.one" target="_blank" rel="noopener">https://ashish.one</a>
. You can add your own domain) to crawl and hit “<em><strong>Validate Domain</strong></em>”.</li>
<li>If everything is fine, simply click on “<em><strong>Add domain</strong></em>” and start crawling by click on <em><strong>Crawl -&gt; Crawl all domains on this index</strong></em>.</li>
<li>Go to <em><strong>Enterprise Search -&gt; Indices</strong></em>. You should see your index name.</li>
</ol>
<h1 id="4-setup-interface">4. Setup Interface</h1>
<p>** Get your credentials ready **</p>
<ol>
<li><code>cloud_id</code> : Visit “<em><strong><a href="https://cloud.elastic.co" target="_blank" rel="noopener">cloud.elastic.co</a>
</strong></em>” -&gt; Navigate to your deployment and click on “<em><strong>manage</strong></em>”. Simply copy Cloud ID and save it.</li>
<li><code>cloud_user</code>: elastic</li>
<li><code>cloud_password</code>: You will get it from step 1.6. If you forget to save, Simply click on <em><strong>“Action” -&gt; “Reset password”</strong></em>. (Username will be elastic)</li>
<li><code>openai_api</code>: Create open ai api key from <a href="https://platform.openai.com/account/api-keys" target="_blank" rel="noopener">https://platform.openai.com/account/api-keys</a>
.</li>
<li><code>es_index</code>: Index name which we created in step 3.3. (search-ashish.one)</li>
<li><code>vector_field</code>: The field which we&rsquo;ve set for destination at step 3.9. i.e. <strong>title-vector</strong></li>
</ol>
<h2 id="setup-on-local-with-docker">Setup on local with Docker</h2>
<ol>
<li>Clone</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>git clone https://github.com/ashishtiwari1993/elasticsearch-chatgpt.git
</span></span><span style="display:flex;"><span>cd elasticsearch-chatgpt
</span></span></code></pre></div><ol start="2">
<li>Replace credentials in <code>Dockerfile</code></li>
</ol>
<p>Open <code>Dockerfile</code> and change below creds</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ENV openai_api<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;open_api_key&gt;&#34;</span>
</span></span><span style="display:flex;"><span>ENV cloud_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elastic cloud id&gt;&#34;</span>
</span></span><span style="display:flex;"><span>ENV cloud_user<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;elastic&#34;</span>
</span></span><span style="display:flex;"><span>ENV cloud_pass<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elastic_cloud_password&gt;&#34;</span>
</span></span><span style="display:flex;"><span>ENV es_index<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elasticsearch_index_name&gt;&#34;</span>
</span></span><span style="display:flex;"><span>ENV chat_title<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;Any title for your page e.g. ashish.one GPT&gt;&#34;</span>
</span></span><span style="display:flex;"><span>ENV vector_field<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt; specify vector field where embedding will be save. e.g. title-vector&gt;&#34;</span>
</span></span></code></pre></div><ol start="3">
<li>Build</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker build -t es-gpt .
</span></span></code></pre></div><ol start="4">
<li>Run</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker run -p 8501:8501 es-gpt
</span></span></code></pre></div><p>Simply visit on <a href="!http://localhost:8501">localhost:8501</a>
</p>
<h2 id="setup-on-renderhttpsrendercom-with-docker">Setup on <a href="https://render.com/" target="_blank" rel="noopener">Render</a>
 with Docker</h2>
<ol>
<li>
<p>Signup on <a href="https://render.com" target="_blank" rel="noopener">https://render.com</a>
.</p>
</li>
<li>
<p>Create <strong>Web Service</strong>.</p>
</li>
<li>
<p>Go to <strong>Public Git repository</strong> section and add below repo url</p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>https://github.com/ashishtiwari1993/elasticsearch-chatgpt
</span></span></code></pre></div><p>Hit on <strong>Continue</strong>.</p>
<ol start="4">
<li>
<p>Add <strong>Name</strong> and select <strong>Free</strong> Instance Type.</p>
</li>
<li>
<p>Click on <strong>Advanced</strong> and <strong>Add Environment Variable</strong></p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>openai_api<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;open_api_key&gt;&#34;</span>
</span></span><span style="display:flex;"><span>cloud_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elastic cloud id&gt;&#34;</span>
</span></span><span style="display:flex;"><span>cloud_user<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;elastic&#34;</span>
</span></span><span style="display:flex;"><span>cloud_pass<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elastic_cloud_password&gt;&#34;</span>
</span></span><span style="display:flex;"><span>es_index<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;elasticsearch_index_name&gt;&#34;</span>                                                 
</span></span><span style="display:flex;"><span>chat_title<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt;Any title for your page e.g. ashish.one GPT&gt;&#34;</span>
</span></span><span style="display:flex;"><span>vector_field<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&lt; specify vector field where embedding will be save. e.g. title-vector&gt;&#34;</span>
</span></span></code></pre></div><ol start="6">
<li>Finally click on <strong>Create Web Service</strong></li>
</ol>
<h2 id="output">Output</h2>
<p><img loading="lazy" src="/img/talks/elasticsearch-chatgpt/ashish_one_gpt.gif" alt="ashish.one ChatGPT"  />
</p>
<h1 id="reference">Reference</h1>
<p><a href="https://www.elastic.co/blog/chatgpt-elasticsearch-openai-meets-private-data" target="_blank" rel="noopener">Blog - ChatGPT and Elasticsearch: OpenAI meets private data</a>
</p>
]]></content:encoded>
    </item>
    <item>
      <title>Receive Webhook Requests Using ELK</title>
      <link>https://ashish.one/blogs/elastic/receive-webhook-requests-using-elk/</link>
      <pubDate>Mon, 23 Jan 2023 13:00:09 +0530</pubDate>
      <guid>https://ashish.one/blogs/elastic/receive-webhook-requests-using-elk/</guid>
      <description>In this blog, we will see how you can quickly setup ELK (Elasticsearch, Logstash, Kibana) stack to receive the HTTP webhook. Mostly ELK stack is known for logging purposes. But Elastic stacks are much more beyond the logging use case. Elastic provides Search, Observability &amp;amp; Security you can check more on this with official documentation .
What is Webhook ? Webhook enables the two programs to communicate or transfer the data with the help of callback functions / hooks.</description>
      <content:encoded><![CDATA[<p>In this blog, we will see how you can quickly setup ELK (Elasticsearch, Logstash, Kibana) stack to receive the HTTP webhook. Mostly ELK stack is known for logging purposes. But Elastic stacks are much more beyond the logging use case.
Elastic provides Search, Observability &amp; Security you can check more on this with <a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">official documentation</a>
.</p>
<h1 id="what-is-webhook-">What is Webhook ?</h1>
<p>Webhook enables the two programs to communicate or transfer the data with the help of callback functions / hooks. Now in the modern tech world it is also known as Reverse API, Push API etc.
Mostly it is used to send small amounts of data from source to destination. It is a one way data transfer procedure. It works over the HTTP protocol using REST API. It is simple like client and server communication.
Most of the saas allow you to integrate their product with your system with the help of APIs and Webhook only. E.g. Slack and discord allows you to push messages with the help of webhooks. To accept the webhook event, You need to expose one HTTP endpoint lets say</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST /message
</span></span></code></pre></div><p>In the above example, your system will accept messages from a third party system. Here you can setup authentication, Method, required parameters etc. and convey to users who are going to use this webhook.</p>
<p>So I have to use the <code>POST</code> method, and send data on the above endpoint. You can hit this Endpoint using curl, postman or any programming language.</p>
<h1 id="what-is-elk-">What is ELK ?</h1>
<p>Well from elastic.co -</p>
<p><em>E</em> - <code>Elasticsearch</code> - Elasticsearch is a distributed, free and open search and analytics engine for all types of data, including textual, numerical, geospatial, structured, and unstructured. Check more <a href="https://www.elastic.co/what-is/elasticsearch" target="_blank" rel="noopener">here</a>
.</p>
<p><em>L</em> - <code>logstash</code> - Logstash is a free and open server-side data processing pipeline that ingests data from a multitude of sources, transforms it, and then sends it to your favorite &ldquo;stash.&rdquo; check more <a href="https://www.elastic.co/logstash/" target="_blank" rel="noopener">here</a>
.</p>
<p><em>K</em> - <code>Kibana</code> - Kibana is an free and open frontend application that sits on top of the Elastic Stack, providing search and data visualization capabilities for data indexed in Elasticsearch. Check more <a href="https://www.elastic.co/what-is/kibana" target="_blank" rel="noopener">here</a>
.</p>
<h1 id="the-flow">The Flow</h1>
<p><em><strong>Events -&gt; Logstash -&gt; Elasticsearch &lt;- Kibana</strong></em></p>
<p>Logstash works with three plugins - <a href="https://www.elastic.co/guide/en/logstash/current/input-plugins.html" target="_blank" rel="noopener">input</a>
, <a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html" target="_blank" rel="noopener">filter</a>
, <a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html" target="_blank" rel="noopener">output</a>
.</p>
<p>You can choose any source as a input. For example you can use <a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html" target="_blank" rel="noopener">jdbc input plugin</a>
 to read data from <code>mysql</code>.</p>
<p>Transform your data with the help of <code>filter</code> plugin.</p>
<p>Push the data on destination which you have specified in output plugin.</p>
<p>We will use below plugins to process the webhooks requests.</p>
<ul>
<li>Input plugin -&gt; <a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-http.html" target="_blank" rel="noopener">HTTP</a>
</li>
<li>Output plugin -&gt; <a href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html" target="_blank" rel="noopener">Elasticsearch</a>
</li>
</ul>
<p>Logstash will process the event and push to the Elasticsearch.
Visualise data from kibana.</p>
<h1 id="implementation">Implementation</h1>
<h2 id="installation">Installation</h2>
<p>You can simply follow the official documentation for installation.</p>
<ul>
<li><strong>Elasticsearch</strong> - <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html</a>
</li>
<li><strong>Kibana</strong> - <a href="https://www.elastic.co/guide/en/logstash/current/installing-logstash.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/installing-logstash.html</a>
</li>
<li><strong>Logstash</strong> - <a href="https://www.elastic.co/guide/en/logstash/current/installing-logstash.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/installing-logstash.html</a>
</li>
</ul>
<p>I am spinning ELK instances using docker. You can choose any method mentioned on above links.</p>
<h2 id="verify">Verify</h2>
<p>Lets verify everything is up and running properly.</p>
<h3 id="elasticsearch">Elasticsearch</h3>
<p>Hit below curl command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>curl --cacert path/to/ca.crt -u elastic:pass@123 https://localhost:9200
</span></span></code></pre></div><p><strong>Response</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;name&#34;</span> : <span style="color:#e6db74">&#34;es01&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;cluster_name&#34;</span> : <span style="color:#e6db74">&#34;docker-cluster&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;cluster_uuid&#34;</span> : <span style="color:#e6db74">&#34;_CDp3XgbQUKTuQxZWVLh6A&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;version&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;number&#34;</span> : <span style="color:#e6db74">&#34;8.6.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;build_flavor&#34;</span> : <span style="color:#e6db74">&#34;default&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;build_type&#34;</span> : <span style="color:#e6db74">&#34;docker&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;build_hash&#34;</span> : <span style="color:#e6db74">&#34;f67ef2df40237445caa70e2fef79471cc608d70d&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;build_date&#34;</span> : <span style="color:#e6db74">&#34;2023-01-04T09:35:21.782467981Z&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;build_snapshot&#34;</span> : <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;lucene_version&#34;</span> : <span style="color:#e6db74">&#34;9.4.2&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;minimum_wire_compatibility_version&#34;</span> : <span style="color:#e6db74">&#34;7.17.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;minimum_index_compatibility_version&#34;</span> : <span style="color:#e6db74">&#34;7.0.0&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;tagline&#34;</span> : <span style="color:#e6db74">&#34;You Know, for Search&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="logstash">Logstash</h3>
<p>Simply check the log file if there is any error.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>tail -f logs/logstash-plain.log
</span></span></code></pre></div><h3 id="kibana">Kibana</h3>
<p>Simply visit <code>https://localhost:5601</code>. Try to login in kibana with credentials.</p>
<p>Now the ELK stack is up and running. Lets create the logstash configuration file to receive the webhook request and push to elasticsearch.</p>
<h2 id="logstash-pipeline">Logstash pipeline</h2>
<p>Create file <code>webhook.conf</code> on the path which you have specified at <code>path.config</code> settings. You can set this setting at <code>config/logstash.yml</code> or <code>config/pipeline.yml</code>.</p>
<h3 id="webhookconf"><code>webhook.conf</code></h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>input <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  http <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    port <span style="color:#f92672">=</span>&gt; <span style="color:#ae81ff">4000</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>filter <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  json <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    source <span style="color:#f92672">=</span>&gt; <span style="color:#e6db74">&#34;message&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>output <span style="color:#f92672">{</span>   
</span></span><span style="display:flex;"><span>  elasticsearch <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    hosts <span style="color:#f92672">=</span>&gt; <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;https://es01:9200&#34;</span><span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>    cacert <span style="color:#f92672">=</span>&gt; <span style="color:#e6db74">&#39;/usr/share/logstash/pipeline/certs/ca.crt&#39;</span>
</span></span><span style="display:flex;"><span>    user <span style="color:#f92672">=</span>&gt; <span style="color:#e6db74">&#39;elastic&#39;</span>
</span></span><span style="display:flex;"><span>    password <span style="color:#f92672">=</span>&gt; <span style="color:#e6db74">&#39;pass@123&#39;</span>
</span></span><span style="display:flex;"><span>    index <span style="color:#f92672">=</span>&gt; <span style="color:#e6db74">&#39;webhook&#39;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>We are configuring HTTP endpoint on port <code>4000</code>. So whenever anyone calls the webhook endpoint, they need to specify port like <code>http://mydomain.com:4000</code></p>
<p>Here i am only defining the index but you can configure data stream as well. Check <a href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html" target="_blank" rel="noopener">here</a>
 for more options.</p>
<h3 id="test-configuration">Test configuration</h3>
<p>Run pipeline with below command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>./bin/logstash -f webhook-receiver.conf
</span></span></code></pre></div><p>Check if any errors are there.</p>
<p>If everything seems fine, Let&rsquo;s start the logstash service.</p>
<h2 id="test">Test</h2>
<p>Push sample data</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>curl -XPOST -H <span style="color:#e6db74">&#39;Content-type:applicaton/json&#39;</span> http://localhost:4000 -d <span style="color:#e6db74">&#39;{&#34;test_key1&#34;:&#34;test_value1&#34;,&#34;info&#34;:{&#34;name&#34;:&#34;Ashish&#34;,&#34;last_name&#34;:&#34;Tiwari&#34;},&#34;my_list&#34;:[&#34;el1&#34;,&#34;el2&#34;]}&#39;</span>
</span></span></code></pre></div><p><strong>Response</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ok%
</span></span></code></pre></div><p>Verify data in elasticsearch</p>
<p>Login to kibana by visiting <code>localhost:5601</code>.</p>
<p>Navigate to <strong><strong>Menu -&gt; Management -&gt; Dev Tools</strong></strong></p>
<p>Lets see if Index is created or not.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET _cat/indices?v
</span></span></code></pre></div><p><strong>Response</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>health status index   uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span></span><span style="display:flex;"><span>yellow open   webhook LiXxWLy5QvKkpYpmLLbYsw   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">1</span>          <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">0</span>     12.5kb         12.5kb
</span></span></code></pre></div><p>I can see the index <code>webhook</code> has been created. Also the <code>docs.count</code> is 1 which means data has been inserted.</p>
<p>Lets see the data.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET webhook/_search
</span></span></code></pre></div><p><strong>Response</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;took&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;timed_out&#34;</span>: <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_shards&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;successful&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;skipped&#34;</span>: <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;failed&#34;</span>: <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;hits&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span>: {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;value&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;relation&#34;</span>: <span style="color:#e6db74">&#34;eq&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;max_score&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;hits&#34;</span>: [
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span>: <span style="color:#e6db74">&#34;webhook&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span>: <span style="color:#e6db74">&#34;-ok63YUBrNdmvLyIE5Ue&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span>: {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;host&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;ip&#34;</span>: <span style="color:#e6db74">&#34;192.168.192.1&#34;</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;my_list&#34;</span>: [
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;el1&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;el2&#34;</span>
</span></span><span style="display:flex;"><span>          ],
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;message&#34;</span>: <span style="color:#e6db74">&#34;&#34;&#34;{&#34;</span><span style="color:#960050;background-color:#1e0010">test_key</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">test_value</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">info</span><span style="color:#e6db74">&#34;:{&#34;</span><span style="color:#960050;background-color:#1e0010">name</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">Ashish</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">last_name</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">Tiwari</span><span style="color:#e6db74">&#34;},&#34;</span><span style="color:#960050;background-color:#1e0010">my_list</span><span style="color:#e6db74">&#34;:[&#34;</span><span style="color:#960050;background-color:#1e0010">el</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">el</span><span style="color:#ae81ff">2</span><span style="color:#e6db74">&#34;]}&#34;&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;event&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;original&#34;</span>: <span style="color:#e6db74">&#34;&#34;&#34;{&#34;</span><span style="color:#960050;background-color:#1e0010">test_key</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">test_value</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">info</span><span style="color:#e6db74">&#34;:{&#34;</span><span style="color:#960050;background-color:#1e0010">name</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">Ashish</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">last_name</span><span style="color:#e6db74">&#34;:&#34;</span><span style="color:#960050;background-color:#1e0010">Tiwari</span><span style="color:#e6db74">&#34;},&#34;</span><span style="color:#960050;background-color:#1e0010">my_list</span><span style="color:#e6db74">&#34;:[&#34;</span><span style="color:#960050;background-color:#1e0010">el</span><span style="color:#ae81ff">1</span><span style="color:#e6db74">&#34;,&#34;</span><span style="color:#960050;background-color:#1e0010">el</span><span style="color:#ae81ff">2</span><span style="color:#e6db74">&#34;]}&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;@version&#34;</span>: <span style="color:#e6db74">&#34;1&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;@timestamp&#34;</span>: <span style="color:#e6db74">&#34;2023-01-23T06:04:08.664398594Z&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;http&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;version&#34;</span>: <span style="color:#e6db74">&#34;HTTP/1.1&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;method&#34;</span>: <span style="color:#e6db74">&#34;POST&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;request&#34;</span>: {
</span></span><span style="display:flex;"><span>              <span style="color:#f92672">&#34;mime_type&#34;</span>: <span style="color:#e6db74">&#34;applicaton/json&#34;</span>,
</span></span><span style="display:flex;"><span>              <span style="color:#f92672">&#34;body&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;bytes&#34;</span>: <span style="color:#e6db74">&#34;97&#34;</span>
</span></span><span style="display:flex;"><span>              }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;info&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;last_name&#34;</span>: <span style="color:#e6db74">&#34;Tiwari&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Ashish&#34;</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;user_agent&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;original&#34;</span>: <span style="color:#e6db74">&#34;curl/7.79.1&#34;</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;url&#34;</span>: {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;path&#34;</span>: <span style="color:#e6db74">&#34;/&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;domain&#34;</span>: <span style="color:#e6db74">&#34;localhost&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;port&#34;</span>: <span style="color:#ae81ff">4000</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;test_key1&#34;</span>: <span style="color:#e6db74">&#34;test_value1&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><img loading="lazy" src="/img/elastic/index-search.png" alt="index-search"  />
</p>
<p>If you are able to see data like above, Your webhook receiver is all set to accept requests.</p>
<h2 id="data-visualisation">Data Visualisation</h2>
<p>Simply navigate to <em><strong>Menu -&gt; Analytics -&gt; Discover</strong></em></p>
<p>Create a <code>Data View</code> on the index <code>webhook</code>.</p>
<p><img loading="lazy" src="/img/elastic/data-view.png" alt="Data View"  />
</p>
<p>To create the dashboard, go to <em><strong>Menu -&gt; Analytics -&gt; Dashboard</strong></em>. You can create a dashboard according to your requirement.</p>
<h1 id="conclusion">Conclusion</h1>
<p>We have successfully set up the webhook receiver with the help of ELK stack. Though ELK use cases are very vast. There are various <a href="https://www.elastic.co/guide/en/logstash/current/input-plugins.html" target="_blank" rel="noopener">input</a>
 and <a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html" target="_blank" rel="noopener">output</a>
 plugins available in logstash for data pipelines.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Getting started with Elastic stack</title>
      <link>https://ashish.one/talks/getting_started_elastic_stack/</link>
      <pubDate>Sat, 17 Sep 2022 19:24:45 +0000</pubDate>
      <guid>https://ashish.one/talks/getting_started_elastic_stack/</guid>
      <description>What this talk is all about ? Elastic Stack (Elasticsearch, Logstash, Kibana and Beats) is such a platform which is built for scalability, performance and “You know&amp;hellip; for Search”. When you have a system which scales to the horizons of your data, helps you in your data quest, shows you insights - imagine what you can do with it.
Talk Video Feel free to comment below, If you have any doubts or suggestion about this talk.</description>
      <content:encoded><![CDATA[<h2 id="what-this-talk-is-all-about-">What this talk is all about ?</h2>
<p>Elastic Stack (Elasticsearch, Logstash, Kibana and Beats) is such a platform which is built for scalability, performance and “You know&hellip; for Search”. When you have a system which scales to the horizons of your data, helps you in your data quest, shows you insights - imagine what you can do with it.</p>
<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/hJoorF6zxBA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h4 id="feel-free-to-comment-below-if-you-have-any-doubts-or-suggestion-about-this-talk">Feel free to comment below, If you have any doubts or suggestion about this talk.</h4>
]]></content:encoded>
    </item>
    <item>
      <title>Getting started with Elasticsearch</title>
      <link>https://ashish.one/talks/ws-es/</link>
      <pubDate>Wed, 14 Sep 2022 17:44:43 +0530</pubDate>
      <guid>https://ashish.one/talks/ws-es/</guid>
      <description>Sample Queries for Elasticsearch Workshop CRUD # Insert POST meetup/_doc/ { &amp;#34;name&amp;#34;:&amp;#34;Ashish Tiwari&amp;#34; } # Insert with id POST meetup/_doc/1 { &amp;#34;name&amp;#34;:&amp;#34;Ashish Tiwari&amp;#34; } # Search GET meetup/_search # Update POST meetup/_doc/1 { &amp;#34;name&amp;#34;:&amp;#34;Ashish&amp;#34;, &amp;#34;company&amp;#34;:&amp;#34;elastic&amp;#34;, &amp;#34;address&amp;#34;:&amp;#34;Navi Mumbai kharghar&amp;#34;, &amp;#34;skills&amp;#34;:{ &amp;#34;language&amp;#34;:[&amp;#34;php&amp;#34;,&amp;#34;java&amp;#34;,&amp;#34;node&amp;#34;], &amp;#34;database&amp;#34;:[&amp;#34;mysql&amp;#34;,&amp;#34;mongodb&amp;#34;], &amp;#34;search&amp;#34;:&amp;#34;elasticsearch&amp;#34; } } # search with query GET meetup/_search { &amp;#34;query&amp;#34;: { &amp;#34;match&amp;#34;: { &amp;#34;address&amp;#34;: &amp;#34;navi&amp;#34; } } } # delete DELETE meetup BULK POST _bulk {&amp;#34;index&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;meetup&amp;#34;}} {&amp;#34;user_id&amp;#34;:1,&amp;#34;first_name&amp;#34;:&amp;#34;Yvonne&amp;#34;,&amp;#34;last_name&amp;#34;:&amp;#34;Willmott&amp;#34;,&amp;#34;email&amp;#34;:&amp;#34;ywillmott0@live.com&amp;#34;,&amp;#34;gender&amp;#34;:&amp;#34;Female&amp;#34;,&amp;#34;street_address&amp;#34;:&amp;#34;38 Helena Avenue&amp;#34;,&amp;#34;ip_address&amp;#34;:&amp;#34;104.</description>
      <content:encoded><![CDATA[<h1 id="sample-queries-for-elasticsearch-workshop">Sample Queries for Elasticsearch Workshop</h1>
<h2 id="crud">CRUD</h2>
<pre tabindex="0"><code>
# Insert

POST meetup/_doc/
{
  &#34;name&#34;:&#34;Ashish Tiwari&#34;
}

# Insert with id

POST meetup/_doc/1
{
  &#34;name&#34;:&#34;Ashish Tiwari&#34;
}

# Search

GET meetup/_search

# Update

POST meetup/_doc/1
{
  &#34;name&#34;:&#34;Ashish&#34;,
  &#34;company&#34;:&#34;elastic&#34;,
  &#34;address&#34;:&#34;Navi Mumbai kharghar&#34;,
  &#34;skills&#34;:{
    &#34;language&#34;:[&#34;php&#34;,&#34;java&#34;,&#34;node&#34;],
    &#34;database&#34;:[&#34;mysql&#34;,&#34;mongodb&#34;],
    &#34;search&#34;:&#34;elasticsearch&#34;
  }
}

# search with query

GET meetup/_search
{
  &#34;query&#34;: {
    &#34;match&#34;: {
      &#34;address&#34;: &#34;navi&#34;
    }
  }
}

# delete

DELETE meetup
</code></pre><h2 id="bulk">BULK</h2>
<pre tabindex="0"><code>POST _bulk
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:1,&#34;first_name&#34;:&#34;Yvonne&#34;,&#34;last_name&#34;:&#34;Willmott&#34;,&#34;email&#34;:&#34;ywillmott0@live.com&#34;,&#34;gender&#34;:&#34;Female&#34;,&#34;street_address&#34;:&#34;38 Helena Avenue&#34;,&#34;ip_address&#34;:&#34;104.221.25.110&#34;,&#34;company&#34;:&#34;Flashset&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:2,&#34;first_name&#34;:&#34;Immanuel&#34;,&#34;last_name&#34;:&#34;Philbrick&#34;,&#34;email&#34;:&#34;iphilbrick1@wunderground.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;01 Bunting Pass&#34;,&#34;ip_address&#34;:&#34;9.20.164.27&#34;,&#34;company&#34;:&#34;Babblestorm&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:3,&#34;first_name&#34;:&#34;Clotilda&#34;,&#34;last_name&#34;:&#34;Danelut&#34;,&#34;email&#34;:&#34;cdanelut2@deliciousdays.com&#34;,&#34;gender&#34;:&#34;Agender&#34;,&#34;street_address&#34;:&#34;0 Crowley Trail&#34;,&#34;ip_address&#34;:&#34;158.94.144.140&#34;,&#34;company&#34;:&#34;Riffpedia&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:4,&#34;first_name&#34;:&#34;Nahum&#34;,&#34;last_name&#34;:&#34;Attfield&#34;,&#34;email&#34;:&#34;nattfield3@blog.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;7 Garrison Court&#34;,&#34;ip_address&#34;:&#34;225.144.148.44&#34;,&#34;company&#34;:&#34;Chatterpoint&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:5,&#34;first_name&#34;:&#34;Vaughan&#34;,&#34;last_name&#34;:&#34;Middis&#34;,&#34;email&#34;:&#34;vmiddis4@ted.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;7 Cody Way&#34;,&#34;ip_address&#34;:&#34;66.198.31.108&#34;,&#34;company&#34;:&#34;Mynte&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:6,&#34;first_name&#34;:&#34;Nolie&#34;,&#34;last_name&#34;:&#34;Alessandrucci&#34;,&#34;email&#34;:&#34;nalessandrucci5@networksolutions.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;826 Brown Hill&#34;,&#34;ip_address&#34;:&#34;96.77.221.95&#34;,&#34;company&#34;:&#34;Feedfish&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:7,&#34;first_name&#34;:&#34;Beverlie&#34;,&#34;last_name&#34;:&#34;Ovitts&#34;,&#34;email&#34;:&#34;bovitts6@tripod.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;6 Sycamore Pass&#34;,&#34;ip_address&#34;:&#34;102.24.117.107&#34;,&#34;company&#34;:&#34;Zazio&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:8,&#34;first_name&#34;:&#34;Graeme&#34;,&#34;last_name&#34;:&#34;Dopson&#34;,&#34;email&#34;:&#34;gdopson7@free.fr&#34;,&#34;gender&#34;:&#34;Female&#34;,&#34;street_address&#34;:&#34;26 Dunning Avenue&#34;,&#34;ip_address&#34;:&#34;198.33.215.93&#34;,&#34;company&#34;:&#34;Flashset&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:9,&#34;first_name&#34;:&#34;Mellisa&#34;,&#34;last_name&#34;:&#34;Hurich&#34;,&#34;email&#34;:&#34;mhurich8@nbcnews.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;6371 Browning Way&#34;,&#34;ip_address&#34;:&#34;66.0.3.199&#34;,&#34;company&#34;:&#34;Divanoodle&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:10,&#34;first_name&#34;:&#34;Dyan&#34;,&#34;last_name&#34;:&#34;Loude&#34;,&#34;email&#34;:&#34;dloude9@berkeley.edu&#34;,&#34;gender&#34;:&#34;Female&#34;,&#34;street_address&#34;:&#34;9818 Reindahl Road&#34;,&#34;ip_address&#34;:&#34;16.56.137.54&#34;,&#34;company&#34;:&#34;Agivu&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:11,&#34;first_name&#34;:&#34;Becky&#34;,&#34;last_name&#34;:&#34;Shank&#34;,&#34;email&#34;:&#34;bshanka@tinypic.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;1206 Warrior Terrace&#34;,&#34;ip_address&#34;:&#34;90.63.35.111&#34;,&#34;company&#34;:&#34;Izio&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:12,&#34;first_name&#34;:&#34;Bar&#34;,&#34;last_name&#34;:&#34;Bedburrow&#34;,&#34;email&#34;:&#34;bbedburrowb@vistaprint.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;75 Onsgard Crossing&#34;,&#34;ip_address&#34;:&#34;85.122.33.250&#34;,&#34;company&#34;:&#34;Zoombox&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:13,&#34;first_name&#34;:&#34;Dorey&#34;,&#34;last_name&#34;:&#34;Isenor&#34;,&#34;email&#34;:&#34;disenorc@privacy.gov.au&#34;,&#34;gender&#34;:&#34;Female&#34;,&#34;street_address&#34;:&#34;53682 Parkside Crossing&#34;,&#34;ip_address&#34;:&#34;150.158.150.213&#34;,&#34;company&#34;:&#34;Rhyzio&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:14,&#34;first_name&#34;:&#34;Torrin&#34;,&#34;last_name&#34;:&#34;Rangall&#34;,&#34;email&#34;:&#34;trangalld@buzzfeed.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;24247 Old Shore Plaza&#34;,&#34;ip_address&#34;:&#34;40.151.17.2&#34;,&#34;company&#34;:&#34;Devpoint&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:15,&#34;first_name&#34;:&#34;Genvieve&#34;,&#34;last_name&#34;:&#34;Beslier&#34;,&#34;email&#34;:&#34;gbesliere@yolasite.com&#34;,&#34;gender&#34;:&#34;Male&#34;,&#34;street_address&#34;:&#34;96214 Miller Trail&#34;,&#34;ip_address&#34;:&#34;115.143.68.208&#34;,&#34;company&#34;:&#34;Oyonder&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:16,&#34;first_name&#34;:&#34;Arden&#34;,&#34;last_name&#34;:&#34;Ramas&#34;,&#34;email&#34;:&#34;aramasf@whitehouse.gov&#34;,&#34;gender&#34;:&#34;Polygender&#34;,&#34;street_address&#34;:&#34;390 Gulseth Alley&#34;,&#34;ip_address&#34;:&#34;36.83.126.154&#34;,&#34;company&#34;:&#34;Youbridge&#34;}
{&#34;index&#34;:{&#34;_index&#34;:&#34;meetup&#34;}}
{&#34;user_id&#34;:17,&#34;first_name&#34;:&#34;Alyosha&#34;,&#34;last_name&#34;:&#34;Domm&#34;,&#34;email&#34;:&#34;adommg@washingtonpost.com&#34;,&#34;gender&#34;:&#34;Female&#34;,&#34;street_address&#34;:&#34;32 Oxford Way&#34;,&#34;ip_address&#34;:&#34;174.71.176.45&#34;,&#34;company&#34;:&#34;Wikizz&#34;}
</code></pre><h2 id="upload-sample-json-data-from-kibana">Upload sample json data from kibana</h2>
<p>Download <a href="/data/movies.json">movies.json</a>
 and insert into elasticsearch by using below command:</p>
<p><em>Open Kibana -&gt; Menu -&gt; Home -&gt; Upload a file</em></p>
<h2 id="create-data-view-in-kibana">Create Data view in Kibana</h2>
<p><em>Open Kibana -&gt; Menu -&gt; Stack Management -&gt; Data Views (Kibana)</em></p>
<h2 id="create-dashboard">Create Dashboard</h2>
<p><em>Open Kibana -&gt; Menu -&gt; Analytics -&gt; Dashboard</em></p>
<h2 id="create-mapping">Create mapping</h2>
<pre tabindex="0"><code>PUT /devfest-raipur
{
  &#34;mappings&#34;: {
    &#34;properties&#34;: {
      &#34;age&#34;:    { &#34;type&#34;: &#34;integer&#34; },  
      &#34;email&#34;:  { &#34;type&#34;: &#34;keyword&#34;  }, 
      &#34;name&#34;:   { &#34;type&#34;: &#34;text&#34;  }     
    }
  }
}
</code></pre><h2 id="analyze">Analyze</h2>
<pre tabindex="0"><code># analyze

GET /_analyze?pretty
{
  &#34;text&#34; : &#34;Quick Brown Foxes!&#34;
}

# Whitespace

GET _analyze
{
  &#34;analyzer&#34;: &#34;whitespace&#34;,
  &#34;text&#34;: &#34;The 2 QUICK Brown-Foxes jumped over the lazy dog\u0027s bone.&#34;
}
</code></pre><h3 id="what-is-an-analyzer">What is an analyzer?</h3>
<p>An analyzer is made of character filters, tokenizer and token filters.</p>
<p>Let&rsquo;s build one</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [], 
  &#34;text&#34;: [ 
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><p>Let&rsquo;s remove the html code.</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [&#34;html_strip&#34;], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [], 
  &#34;text&#34;: [ 
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><p>Some words don&rsquo;t bring us any value. Let&rsquo;s skip them.</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [&#34;html_strip&#34;], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [
    {
      &#34;type&#34;:       &#34;stop&#34;,
      &#34;stopwords&#34;:  [ &#34;_english_&#34;]
    }
  ], 
  &#34;text&#34;:
  [ 
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><p>We can also remove &ldquo;I&rdquo;, &ldquo;when&rdquo; and &ldquo;over&rdquo;.</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [&#34;html_strip&#34;], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [
    {
      &#34;type&#34;:       &#34;stop&#34;,
      &#34;ignore_case&#34;:true, 
      &#34;stopwords&#34;:  [ &#34;_english_&#34;, &#34;I&#34;, &#34;when&#34;, &#34;over&#34;]
    }
  ], 
  &#34;text&#34;:
  [ 
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><p><code>DOGS</code> and <code>dogs</code> should match.</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [&#34;html_strip&#34;], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [
    {
      &#34;type&#34;:       &#34;stop&#34;,
      &#34;ignore_case&#34;:true, 
      &#34;stopwords&#34;:  [ &#34;_english_&#34;, &#34;I&#34;, &#34;when&#34;, &#34;over&#34;]
    },
    &#34;lowercase&#34;
  ], 
  &#34;text&#34;:
  [ 
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><p><code>dog</code>, <code>dogs</code> and <code>fox</code>, <code>foxes</code> and <code>jump</code>, <code>jumps</code>, <code>jumping</code>, <code>jumped</code> should match. Let&rsquo;s use a <code>stemmer</code>.</p>
<pre tabindex="0"><code>POST _analyze
{
  &#34;char_filter&#34;: [&#34;html_strip&#34;], 
  &#34;tokenizer&#34;:   &#34;standard&#34;,
  &#34;filter&#34;:      [
    {
      &#34;type&#34;:       &#34;stop&#34;,
      &#34;ignore_case&#34;:true, 
      &#34;stopwords&#34;:  [ &#34;_english_&#34;, &#34;I&#34;, &#34;when&#34;, &#34;over&#34;]
    },
    &#34;lowercase&#34;,
    {
      &#34;type&#34;:       &#34;stemmer&#34;,
      &#34;language&#34;:   &#34;english&#34; 
    }
  ], 
  &#34;text&#34;:
  [ 
    &#34;jumping jumps jump jumped&#34;,
    &#34;I like when the &lt;strong&gt;quick&lt;/strong&gt; foxes jumps over lazy DOGS!&#34;,
    &#34;and &lt;strong&gt;fast&lt;/strong&gt;&#34;
  ]
}
</code></pre><h1 id="language-analyzer">Language analyzer</h1>
<pre tabindex="0"><code>GET /_analyze?pretty
{
  &#34;analyzer&#34;: &#34;hindi&#34;, 
  &#34;text&#34; : &#34;चाणक्य ने चंद्रगुप्त और बिंदूसार दोनों के लिए प्रधानमंत्री और राजनयिक सलाहकार के रूप में काम किया।&#34;
}
</code></pre><h2 id="lets-create-hindi-search-engine-गतयतर">Let&rsquo;s create Hindi search engine (गीतयंत्र)</h2>
<h3 id="create-mapping-1">Create mapping</h3>
<pre tabindex="0"><code>PUT geetyantra
{
  &#34;settings&#34;: {
    &#34;analysis&#34;: {
      &#34;analyzer&#34;: {
        &#34;geetyantra-analyzer&#34;:{
          &#34;type&#34;:&#34;hindi&#34;
        }
      }
    }
  },
  &#34;mappings&#34;: {
    &#34;properties&#34;: {
      &#34;adhyay&#34;: {&#34;type&#34;: &#34;integer&#34;},
      &#34;updesh&#34;: {&#34;type&#34;: &#34;text&#34;,&#34;analyzer&#34;: &#34;geetyantra-analyzer&#34;}
    }
  }
}
</code></pre><h3 id="insert-data">Insert data</h3>
<p>Taking data from 🙏<a href="https://hi.wikipedia.org/wiki/%E0%A4%B6%E0%A5%8D%E0%A4%B0%E0%A5%80%E0%A4%AE%E0%A4%A6%E0%A5%8D%E0%A4%AD%E0%A4%97%E0%A4%B5%E0%A4%A6%E0%A5%8D%E0%A4%97%E0%A5%80%E0%A4%A4%E0%A4%BE" target="_blank" rel="noopener">विकिपीडिया-श्रीमद्भगवद्गीता</a>
</p>
<p>Lets insert some data like below:</p>
<pre tabindex="0"><code>POST geetyantra/_doc
{
  &#34;adhyay&#34;:1,
  &#34;updesh&#34;:&#34;कृष्ण ने अर्जुन की वह स्थिति देखकर जान लिया कि अर्जुन का शरीर ठीक है किंतु युद्ध आरंभ होने से पहले ही उस अद्भुत क्षत्रिय का मनोबल टूट चुका है। बिना मन के यह शरीर खड़ा नहीं रह स।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:2,
  &#34;updesh&#34;:&#34;दूसरे अध्याय का नाम सांख्ययोग है। इसमें जीवन की दो प्राचीन संमानित परंपराओं का तर्कों द्वारा वर्णन आया है। अर्जुन को उस कृपण स्थिति में रोते देखकर कृष्ण ने उनका ध्यान दिलाया है कि इस प्रकार का क्लैव्य और हृदय की क्षुद्र दुर्बलता अर्जुन जैसे वीर के लिए उचित नहीं।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:3,
  &#34;updesh&#34;:&#34;नित्य कर्म करने वाले की श्रेष्ठता&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:4,
  &#34;updesh&#34;:&#34;चौथे अध्याय में, जिसका नाम ज्ञान-कर्म-संन्यास-योग है, यह बाताया गया है कि ज्ञान प्राप्त करके कर्म करते हुए भी कर्मसंन्यास का फल किस उपाय से प्राप्त किया जा सकता है।&#34;,
  &#34;shloka&#34;:&#34;यदा यदा हि धर्मस्य ग्लानिर्भवति भारत,अभ्युत्थानमधर्मस्य तदात्मानं सृजाम्यहम्&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:5,
  &#34;updesh&#34;:&#34;ज्ञानी महापुरुष विद्या-विनययुक्त ब्राह्मण में और चाण्डाल में तथा गाय, हाथी एवं कुत्ते में भी समरूप परमात्मा को देखने वाले होते हैं।&#34;,
  &#34;shloka&#34;:&#34;विद्याविनयसंपन्ने ब्राह्मणे गवि हस्तिनि,शुनि चैव श्वपाके च पंडिता: समदर्शिन&#34;
}


POST geetyantra/_doc
{
  &#34;adhyay&#34;:6,
  &#34;updesh&#34;:&#34;छठा अध्याय आत्मसंयम योग है जिसका विषय नाम से ही प्रकट है। जितने विषय हैं उन सबसे इंद्रियों का संयम-यही कर्म और ज्ञान का निचोड़ है। सुख में और दुख में मन की समान स्थिति, इसे ही योग कहते हैं।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:7,
  &#34;updesh&#34;:&#34;पंचतत्व, मन, बुद्धि भी मैं हूँ| मैं ही संसार की उत्पत्ति करता हूँ और विनाश भी मैं ही करता हूँ। मेरे भक्त चाहे जिस प्रकार भजें परन्तु अंततः मुझे ही प्राप्त होते हैं। मैं योगमाया से अप्रकट रहता हूँ और मुर्ख मुझे केवल साधारण मनुष्य ही समझते हैं।&#34;,
  &#34;shloka&#34;:&#34;यो यो यां यां तनुं भक्तः श्रद्धयार्चितुमिच्छति,तस्य तस्याचलां श्रद्धां तामेव विदधाम्यहम्&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:8,
  &#34;updesh&#34;:&#34;की संज्ञा अक्षर ब्रह्मयोग है। उपनिषदों में अक्षर विद्या का विस्तार हुआ। गीता में उस अक्षरविद्या का सार कह दिया गया है-अक्षर ब्रह्म परमं, अर्थात् परब्रह्म की संज्ञा अक्षर है। मनुष्य, अर्थात् जीव और शरीर की संयुक्त रचना का ही नाम अध्यात्म है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:9,
  &#34;updesh&#34;:&#34;को राजगुह्ययोग कहा गया है, अर्थात् यह अध्यात्म विद्या विद्याराज्ञी है और यह गुह्य ज्ञान सबमें श्रेष्ठ है। राजा शब्दका एक अर्थ मन भी था। अतएव मन की दिव्य शक्तिमयों को किस प्रकार ब्रह्ममय बनाया जाय, इसकी युक्ति ही राजविद्या है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:10,
  &#34;updesh&#34;:&#34;दसवें अध्याय का नाम विभूतियोग है। इसका सार यह है कि लोक में जितने देवता हैं, सब एक ही भगवान, की विभूतियाँ हैं, मनुष्य के समस्त गुण और अवगुण भगवान की शक्ति के ही रूप हैं।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:11,
  &#34;updesh&#34;:&#34;का नाम विश्वरूपदर्शन योग है। इसमें अर्जुन ने भगवान का विश्वरूप देखा। विराट रूप का अर्थ है मानवीय धरातल और परिधि के ऊपर जो अनंत विश्व का प्राणवंत रचनाविधान है, उसका साक्षात दर्शन। विष्णु का जो चतुर्भुज रूप है, वह मानवीय धरातल पर सौम्यरूप है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:12,
  &#34;updesh&#34;:&#34;का नाम भक्ति योग है। जो जानने योग्य है। जिसको जानकर मनुष्य परमानन्द को प्राप्त हो जाता है अर्थात वो परमात्मा ही सत्य है ।।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:13,
  &#34;updesh&#34;:&#34;में एक सीधा विषय क्षेत्र और क्षेत्रज्ञ का विचार है। यह शरीर क्षेत्र है, उसका जाननेवाला जीवात्मा क्षेत्रज्ञ है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:14,
  &#34;updesh&#34;:&#34;का नाम गुणत्रय विभाग योग है। यह विषय समस्त वैदिक, दार्शनिक और पौराणिक तत्वचिंतन का निचोड़ है-सत्व, रज, तम नामक तीन गुण-त्रिको की अनेक व्याख्याएँ हैं।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:15,
  &#34;updesh&#34;:&#34;का नाम पुरुषोत्तमयोग है। इसमें विश्व का अश्वत्थ के रूप में वर्णन किया गया है। यह अश्वत्थ रूपी संसार महान विस्तारवाला है। देश और काल में इसका कोई अंत नहीं है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:16,
  &#34;updesh&#34;:&#34;में देवासुर संपत्ति का विभाग बताया गया है। आरंभ से ही ऋग्देव में सृष्टि की कल्पना दैवी और आसुरी शक्तियों के रूप में की गई है। &#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:17,
  &#34;updesh&#34;:&#34;की संज्ञा श्रद्धात्रय विभाग योग है। इसका संबंध सत, रज और तम, इन तीन गुणों से ही है, अर्थात् जिसमें जिस गुण का प्रादुर्भाव होता है, उसकी श्रद्धा या जीवन की निष्ठा वैसी ही बन जाती है।&#34;
}

POST geetyantra/_doc
{
  &#34;adhyay&#34;:18,
  &#34;updesh&#34;:&#34;की संज्ञा मोक्षसंन्यास योग है। इसमें गीता के समस्त उपदेशों का सार एवं उपसंहार है। यहाँ पुन: बलपूर्वक मानव जीवन के लिए तीन गुणों का महत्व कहा गया है। पृथ्वी के मानवों में और स्वर्ग के देवताओं में कोई भी ऐसा नहीं जो प्रकृति के चलाए हुए इन तीन गुणों से बचा हो।&#34;
}
</code></pre><h3 id="search">Search</h3>
<pre tabindex="0"><code>
GET geetyantra/_search?size=20

GET geetyantra/_search
{
  &#34;query&#34;: {
    &#34;match&#34;: {
      &#34;updesh&#34;: &#34;अर्जुन&#34;
    }
  }
}

GET geetyantra/_search
{
  &#34;query&#34;: {
    &#34;match&#34;: {
      &#34;shloka&#34;: &#34;धर्मस्य&#34;
    }
  }
}

GET geetyantra/_search
{
  &#34;query&#34;: {
    &#34;multi_match&#34;: {
      &#34;query&#34;: &#34;श्रद्धा&#34;,
      &#34;fields&#34;: [&#34;shloka&#34;,&#34;updesh&#34;]
    }
  }
}

GET geetyantra/_search
{
  &#34;query&#34;: {
    &#34;match_phrase_prefix&#34;: {
      &#34;updesh&#34;: &#34;चौथे अध्याय में&#34;
    }
  }
}
</code></pre><h2 id="search-as-you-type">Search as you type</h2>
<p>Refer article <a href="https://ashish.one/blogs/search-as-you-type/" target="_blank" rel="noopener">Search as you type</a>
.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Start a single node elastic cluster with Docker Compose</title>
      <link>https://ashish.one/blogs/elastic-docker-compose/</link>
      <pubDate>Wed, 08 Jun 2022 13:25:09 +0530</pubDate>
      <guid>https://ashish.one/blogs/elastic-docker-compose/</guid>
      <description>Introduction In this gist, we will quickly try to spin Elastic stacks with Docker containers. We are going to use docker-compose . You can learn more about Docker &amp;amp; Docker Compose , Which will help you to understand the flow.
Prerequisite Tested on the below configuration.
docker:Docker version 20.10.16, build aa7e414 docker-compose:Docker version 20.10.16, build aa7e414 Cluster This setup will include
Elasticsearch Kibana Logstash APM Setup Clone repo:
git clone https://github.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>In this gist, we will quickly try to spin Elastic stacks with Docker containers. We are going to use <a href="https://docs.docker.com/compose/" target="_blank" rel="noopener">docker-compose</a>
. You can learn more about <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>
 &amp; <a href="https://docs.docker.com/compose/" target="_blank" rel="noopener">Docker Compose</a>
, Which will help you to understand the flow.</p>
<h1 id="prerequisite">Prerequisite</h1>
<p>Tested on the below configuration.</p>
<ul>
<li>docker:<code>Docker version 20.10.16, build aa7e414</code></li>
<li>docker-compose:<code>Docker version 20.10.16, build aa7e414</code></li>
</ul>
<h1 id="cluster">Cluster</h1>
<p>This setup will include</p>
<ul>
<li>Elasticsearch</li>
<li>Kibana</li>
<li>Logstash</li>
<li>APM</li>
</ul>
<h1 id="setup">Setup</h1>
<p>Clone repo:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>git clone https://github.com/ashishtiwari1993/elastic-docker.git
</span></span><span style="display:flex;"><span>cd elastic-docker
</span></span></code></pre></div><p>Make changes in <code>.env</code> file.</p>
<h1 id="start-the-cluster">Start the cluster</h1>
<h2 id="start">Start</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker-compose up -d
</span></span></code></pre></div><p>Just visit to <code>localhost:5601</code>. You should see a kibana login page.</p>
<h2 id="stop">Stop</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker-compose down
</span></span></code></pre></div><h2 id="stop-with-deleting-network-containers-and-volumes">Stop with deleting network, containers and volumes</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker-compose down -v
</span></span></code></pre></div><h1 id="access-stacks">Access stacks</h1>
<h2 id="elasticsearch">Elasticsearch</h2>
<h3 id="access-via-curl-from-host-machine">Access via <code>curl</code> from host machine</h3>
<h4 id="copy-cacrt-file">Copy <code>ca.crt</code> file</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>docker cp elastic-docker_es01_1:/usr/share/elasticsearch/config/certs/ca/ca.crt /tmp/
</span></span></code></pre></div><h4 id="curl-command">Curl command</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>curl --cacert /tmp/ca.crt -u elastic:pass@123 https://localhost:9200
</span></span></code></pre></div><h2 id="logstash">Logstash</h2>
<ol>
<li>You need to have pipeline configuration files on <code>LOGSTASH_PIPELINE_PATH</code> location. If there will be no file, Logstash will throw an error and get exit.</li>
</ol>
<h1 id="note">NOTE</h1>
<blockquote>
<p>You can simply comment other stacks which is not needed. For example if you want to just run Elasticsearch &amp; Kibana, Just comment the APM or other stack specification.</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Parsing Custom log format to the Elasticsearch</title>
      <link>https://ashish.one/blogs/parsing-custom-log-format-to-the-elasticsearch/</link>
      <pubDate>Fri, 29 Apr 2022 01:24:55 +0530</pubDate>
      <guid>https://ashish.one/blogs/parsing-custom-log-format-to-the-elasticsearch/</guid>
      <description>Introduction As a developer, you need to log everything it may be info, error or debug logs, etc. There are multiple types of log formats like Common log, JSON log, etc. and there are already solutions available in an elastic stack like filebeat to read JSON logs and push them to elasticsearch.
There can be cases where you need to log the data according to your convenience which will not be any standard log format.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>As a developer, you need to log everything it may be info, error or debug logs, etc. There are multiple types of log formats like Common log, JSON log, etc. and there are already solutions available in an elastic stack like filebeat to read JSON logs and push them to elasticsearch.</p>
<p>There can be cases where you need to log the data according to your convenience which will not be any standard log format. Or sometimes you just need to dump the log in an unstructured way but you need to have it in a structured format if you want to analyze those.</p>
<p>In this article, we are going to see how we can parse custom logs of any format into Elasticsearch. Elasticsearch provides the ingest pipeline with grok processor which will be able to match any unstructured log.</p>
<h1 id="overview">Overview</h1>
<h2 id="ingest-pipeline">Ingest Pipeline</h2>
<p>Elasticsearch gives <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html" target="_blank" rel="noopener">ingest pipeline</a>
 where it let you perform different types of operations or data transformations before indexing the data. The pipeline consists of a series of various processors.</p>
<p>Each processor in the pipeline takes input and produces the output. That output goes as input to the next processor.</p>
<p>Like below, After converting into lowercase letters by &ldquo;lowercase processor&rdquo; it sends the same string as input to the &ldquo;split processor&rdquo;.</p>
<p>Example</p>
<pre tabindex="0"><code>{&#34;date&#34;:&#34;HELLO - WORLD&#34;} Input → |  lowercase processor ({&#34;date&#34;:&#34;hello - world&#34;}) → split processor ({&#34;date&#34;:&#34;hello world&#34;})   |  → Index
</code></pre><p>You can check more about ingest <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html" target="_blank" rel="noopener">pipeline</a>
 and <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/processors.html" target="_blank" rel="noopener">processors</a>
.</p>
<h2 id="grok-processor">Grok Processor</h2>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/grok-processor.html" target="_blank" rel="noopener">Grok Processor</a>
 allows you to extract structured data from the ingested value on the specific field. Grok Processor works with grok patterns.</p>
<p>Let&rsquo;s suppose you have the following document</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;Ip&#34;</span>:<span style="color:#e6db74">&#34;1.2.3.4&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;country&#34;</span>:<span style="color:#e6db74">&#34;India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;log&#34;</span>:<span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:user not found&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>You can mention the field name (Ex. <code>log</code>) where you want to apply a grok processor. The Grok processor uses the Grok pattern.</p>
<h2 id="grok-pattern">Grok pattern</h2>
<p>Grok pattern is the regular expression which is the alias of some of the predefined expressions which can be reused.</p>
<p>Below is some sample grok patterns:</p>
<pre tabindex="0"><code>HOSTNAME \b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)
USERNAME [a-zA-Z0-9._-]+
USER %{USERNAME}
SPACE \s*
</code></pre><p>Here <code>HOSTNAME</code>, <code>USERNAME</code>, <code>USER</code> &amp; <code>SPACE</code> are Grok pattern names.</p>
<p>I can directly use <code>SPACE</code> label to define regex for space instead of a regular pattern like <code>\s*</code>. Also, the Grok pattern can be reused as the same as <code>USERNAME</code>.</p>
<h3 id="pattern-list">Pattern list</h3>
<p>You can find all pattern list on the below link:</p>
<p><a href="https://github.com/elastic/elasticsearch/tree/8.1/libs/grok/src/main/resources/patterns" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch/tree/8.1/libs/grok/src/main/resources/patterns</a>
</p>
<p>You can select any folder and explore all the patterns.</p>
<p><strong>Grok pattern</strong>: <a href="https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/ecs-v1/grok-patterns" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/ecs-v1/grok-patterns</a>
</p>
<h1 id="the-flow">The flow</h1>
<ol>
<li>Create &amp; Test Ingest Pipeline</li>
<li>Index custom data</li>
</ol>
<p>Lets create the pipeline with a grok processor which is going to parse the <code>message</code> field with the document below.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;Ip&#34;</span>:<span style="color:#e6db74">&#34;1.2.3.4&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;country&#34;</span>:<span style="color:#e6db74">&#34;India&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;message&#34;</span>:<span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:user not found,code:123&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>I would like to extract the below data from message field and index into elasticsearch,</p>
<pre tabindex="0"><code>&#34;method_name&#34; : &#34;fetchUser&#34;,
&#34;log_level&#34; : &#34;ERROR&#34;,
&#34;response_code&#34; : &#34;123&#34;,
&#34;message&#34; : &#34;user not found&#34;
</code></pre><h2 id="create--test-ingest-pipeline">Create &amp; Test Ingest Pipeline</h2>
<h3 id="syntax">Syntax</h3>
<pre tabindex="0"><code>%{SYNTAX:ID}
</code></pre><p><strong>SYNTAX</strong>: It is the pattern name.<br>
<strong>ID</strong>: It is the key name of the document.</p>
<p>Data need to parse</p>
<pre tabindex="0"><code>LEVEL:ERROR,method:fetchUser(),message:user not found
</code></pre><p>Let&rsquo;s match some of the grok patterns from the below file
<a href="https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/ecs-v1/grok-patterns" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/ecs-v1/grok-patterns</a>
</p>
<pre tabindex="0"><code>ERROR = %{LOGLEVEL:log_level}
fetchUser = %{WORD:method_name}
user not found = %{GREEDYDATA:message}
123 = code:(?&lt;response_code&gt;(?:[+-]?(?:[0-9]+)))
</code></pre><p><strong>Data</strong></p>
<pre tabindex="0"><code>LEVEL:ERROR,method:fetchUser(),message:user not found
</code></pre><p><strong>Final Pattern</strong></p>
<pre tabindex="0"><code>&#34;LEVEL:%{LOGLEVEL:log_level},method:%{WORD:method_name}\\(\\),message:%{GREEDYDATA:message},code:(?&lt;response_code&gt;(?:[+-]?(?:[0-9]+)))&#34;
</code></pre><blockquote>
<p>Note: You can add your own regex as well. For example, I have added regex for <code>code</code>.</p>
</blockquote>
<h2 id="test-pipeline">Test pipeline</h2>
<p>For testing above pattern or pipeline we can use <a href="https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/ecs-v1/grok-patterns" target="_blank" rel="noopener">Simulate Pipeline API</a>
 like below:</p>
<h4 id="_simulate">_simulate</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST /_ingest/pipeline/_simulate?pretty
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;pipeline&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;description&#34;</span> : <span style="color:#e6db74">&#34;testing grok processor&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;processors&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;grok&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;field&#34;</span>: <span style="color:#e6db74">&#34;log&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;patterns&#34;</span>: <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;LEVEL:%{LOGLEVEL:log_level},method:%{WORD:method_name}\\(\\),message:%{GREEDYDATA:message},code:(?&lt;response_code&gt;(?:[+-]?(?:[0-9]+)))&#34;</span><span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;docs&#34;</span>:<span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;_source&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;log&#34;</span>: <span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:user not found,code:123&#34;</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><h4 id="response">Response</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;docs&#34;</span> : [
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;doc&#34;</span> : {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;_index&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;_id&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;response_code&#34;</span> : <span style="color:#e6db74">&#34;123&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:user not found,code:123&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;method_name&#34;</span> : <span style="color:#e6db74">&#34;fetchUser&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log_level&#34;</span> : <span style="color:#e6db74">&#34;ERROR&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;message&#34;</span> : <span style="color:#e6db74">&#34;user not found&#34;</span>
</span></span><span style="display:flex;"><span>        },
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_ingest&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;timestamp&#34;</span> : <span style="color:#e6db74">&#34;2022-04-29T14:20:59.454111422Z&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>As you can see we got the desired output. Now let&rsquo;s save the pipeline.</p>
<h3 id="save-pipeline">Save pipeline</h3>
<p>Pipeline can be saved using <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html" target="_blank" rel="noopener">_ingest/pipeline</a>
 API.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>PUT /_ingest/pipeline/custom_log?pretty
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;description&#34;</span> : <span style="color:#e6db74">&#34;testing grok processor&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;processors&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;grok&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;field&#34;</span>: <span style="color:#e6db74">&#34;log&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;patterns&#34;</span>: <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;LEVEL:%{LOGLEVEL:log_level},method:%{WORD:method_name}\\(\\),message:%{GREEDYDATA:message},code:(?&lt;response_code&gt;(?:[+-]?(?:[0-9]+)))&#34;</span><span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p><strong>Custom_log</strong>:  It is the pipeline name. We need to specify the pipeline name while indexing the data.</p>
<h2 id="index-custom-data">Index custom data</h2>
<p>Now let&rsquo;s index some data with the same pipeline which we created.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST data-stream/_doc?pipeline<span style="color:#f92672">=</span>custom_log
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:INFO,method:addUser(),message:user added successfully.,code:200&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>POST data-stream/_doc?pipeline<span style="color:#f92672">=</span>custom_log
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:DEBUG,method:deleteUser(),message:user_id notfound.,code:433&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>POST data-stream/_doc?pipeline<span style="color:#f92672">=</span>custom_log
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:Database connection timeout,code:567&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>Check all data</p>
<pre tabindex="0"><code>GET data-stream/_search?pretty
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;took&#34;</span> : <span style="color:#ae81ff">898</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;timed_out&#34;</span> : <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_shards&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;successful&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;skipped&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;failed&#34;</span> : <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;hits&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;value&#34;</span> : <span style="color:#ae81ff">3</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;relation&#34;</span> : <span style="color:#e6db74">&#34;eq&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;max_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;hits&#34;</span> : [
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;data-stream&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;3460dYABYeDE95hG23XJ&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;response_code&#34;</span> : <span style="color:#e6db74">&#34;200&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:INFO,method:addUser(),message:user added successfully.,code:200&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;method_name&#34;</span> : <span style="color:#e6db74">&#34;addUser&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log_level&#34;</span> : <span style="color:#e6db74">&#34;INFO&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;message&#34;</span> : <span style="color:#e6db74">&#34;user added successfully.&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      },
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;data-stream&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;Kwi2dYABbuPmoOiCSUjL&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;response_code&#34;</span> : <span style="color:#e6db74">&#34;433&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:DEBUG,method:deleteUser(),message:user_id notfound.,code:433&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;method_name&#34;</span> : <span style="color:#e6db74">&#34;deleteUser&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log_level&#34;</span> : <span style="color:#e6db74">&#34;DEBUG&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;message&#34;</span> : <span style="color:#e6db74">&#34;user_id notfound.&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      },
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;data-stream&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;LAi4dYABbuPmoOiCmUgb&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;response_code&#34;</span> : <span style="color:#e6db74">&#34;567&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;LEVEL:ERROR,method:fetchUser(),message:Database connection timeout,code:567&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;method_name&#34;</span> : <span style="color:#e6db74">&#34;fetchUser&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log_level&#34;</span> : <span style="color:#e6db74">&#34;ERROR&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;message&#34;</span> : <span style="color:#e6db74">&#34;Database connection timeout&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="parsing-common-log-format">Parsing common log format</h1>
<p>Common log format is standard format for logging which is used by webservers and system log generators etc.</p>
<p>Let&rsquo;s say we having below log:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>97.92.139.153 <span style="color:#ae81ff">1254</span> ashishtiwari <span style="color:#f92672">[</span>04/Mar/2022:15:18:55 +0530<span style="color:#f92672">]</span> <span style="color:#e6db74">&#34;GET /niches HTTP/1.1&#34;</span> <span style="color:#ae81ff">201</span> <span style="color:#ae81ff">2322</span>
</span></span></code></pre></div><h2 id="grok-pattern-1">Grok Pattern</h2>
<p><img loading="lazy" src="/img/misc/parse-custom-log.png" alt="Common log format grok pattern"  />
</p>
<h2 id="final-grok-pattern">Final Grok Pattern</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>%<span style="color:#f92672">{</span>IPORHOST:ip<span style="color:#f92672">}</span> %<span style="color:#f92672">{</span>USER:user_id<span style="color:#f92672">}</span> %<span style="color:#f92672">{</span>USERNAME:username<span style="color:#f92672">}</span> <span style="color:#ae81ff">\\</span><span style="color:#f92672">[</span>%<span style="color:#f92672">{</span>HTTPDATE:date<span style="color:#f92672">}</span><span style="color:#ae81ff">\\</span><span style="color:#f92672">]</span> <span style="color:#ae81ff">\&#34;</span>%<span style="color:#f92672">{</span>WORD:request.method<span style="color:#f92672">}</span> %<span style="color:#f92672">{</span>URIPATH:request.path<span style="color:#f92672">}</span> %<span style="color:#f92672">{</span>URIPROTO:request.proto<span style="color:#f92672">}</span>/%<span style="color:#f92672">{</span>NUMBER:request.http_version<span style="color:#f92672">}</span><span style="color:#ae81ff">\&#34;</span> %<span style="color:#f92672">{</span>NUMBER:request.response<span style="color:#f92672">}</span> %<span style="color:#f92672">{</span>NUMBER:request.size_bytes<span style="color:#f92672">}</span>
</span></span></code></pre></div><h2 id="_simulate-1">_simulate</h2>
<p>Lets simulate the pipeline with above grok pattern</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST /_ingest/pipeline/_simulate?pretty
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;pipeline&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;description&#34;</span> : <span style="color:#e6db74">&#34;testing grok processor&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;processors&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;grok&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;field&#34;</span>: <span style="color:#e6db74">&#34;log&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;patterns&#34;</span>: <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;%{IPORHOST:ip} %{USER:user_id} %{USERNAME:username} \\[%{HTTPDATE:date}\\] \&#34;%{WORD:request.method} %{URIPATH:request.path} %{URIPROTO:request.proto}/%{NUMBER:request.http_version}\&#34; %{NUMBER:request.response} %{NUMBER:request.size_bytes}&#34;</span><span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;docs&#34;</span>:<span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;_source&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;log&#34;</span>: <span style="color:#e6db74">&#34;97.92.139.153 1254 ashishtiwari [04/Mar/2022:15:18:55 +0530] \&#34;GET /niches HTTP/1.1\&#34; 201 2322&#34;</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><h2 id="response-1">Response</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;docs&#34;</span> : [
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;doc&#34;</span> : {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;_index&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;_id&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;date&#34;</span> : <span style="color:#e6db74">&#34;04/Mar/2022:15:18:55 +0530&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;request&#34;</span> : {
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;path&#34;</span> : <span style="color:#e6db74">&#34;/niches&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;size_bytes&#34;</span> : <span style="color:#e6db74">&#34;2322&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;method&#34;</span> : <span style="color:#e6db74">&#34;GET&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;response&#34;</span> : <span style="color:#e6db74">&#34;201&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;proto&#34;</span> : <span style="color:#e6db74">&#34;HTTP&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;http_version&#34;</span> : <span style="color:#e6db74">&#34;1.1&#34;</span>
</span></span><span style="display:flex;"><span>          },
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;log&#34;</span> : <span style="color:#e6db74">&#34;&#34;&#34;97.92.139.153 1254 ashishtiwari [04/Mar/2022:15:18:55 +0530] &#34;</span><span style="color:#960050;background-color:#1e0010">GET</span> <span style="color:#960050;background-color:#1e0010">/niches</span> <span style="color:#960050;background-color:#1e0010">HTTP/</span><span style="color:#ae81ff">1.1</span><span style="color:#e6db74">&#34; 201 2322&#34;&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;user_id&#34;</span> : <span style="color:#e6db74">&#34;1254&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;ip&#34;</span> : <span style="color:#e6db74">&#34;97.92.139.153&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;username&#34;</span> : <span style="color:#e6db74">&#34;ashishtiwari&#34;</span>
</span></span><span style="display:flex;"><span>        },
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_ingest&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;timestamp&#34;</span> : <span style="color:#e6db74">&#34;2022-04-29T14:42:51.765427484Z&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>As we can see it successfully parsed the data. You can save the pipeline and index the data as shown on the above steps.</p>
<p>Similarly you can parse any log format with Grok pattern.</p>
<h1 id="demo">Demo</h1>
<p>You can also check the demo on the below link where I presented how you can parse common log format using ingest pipeline and grok processor.</p>
<p><a href="https://ashish.one/talks/devops-conf-2022/" target="_blank" rel="noopener">https://ashish.one/talks/devops-conf-2022/</a>
</p>
<h1 id="conclusion">Conclusion</h1>
<p>We have seen how we can parse any types of log format into elasticsearch with the help of ingest pipeline &amp; grok processor. You can also use this ingest pipeline with filebeat or logstash. Where you just need to specify the pipeline name.</p>
<p>Feel free to put in comments if you have any doubts.</p>
]]></content:encoded>
    </item>
    <item>
      <title>[Part -1] Search as you type</title>
      <link>https://ashish.one/blogs/search-as-you-type/</link>
      <pubDate>Fri, 18 Mar 2022 01:24:55 +0530</pubDate>
      <guid>https://ashish.one/blogs/search-as-you-type/</guid>
      <description>Introduction In this blog, we will try to understand how “Search as you type” works and Quickly setup one demo using some sample data. You must have seen various websites like eCommerce, food apps, etc. where you just start typing &amp;amp; simultaneously relevant options start displaying as suggestions and autocomplete. We will try to achieve somewhat the same feature. Search as you type Elasticsearch gives this specific mapping type which you can simply set to a specific field where you want to perform this kind of search.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>In this blog, we will try to understand how “Search as you type” works and Quickly setup one demo using some sample data.
You must have seen various websites like eCommerce, food apps, etc. where you just start typing &amp; simultaneously relevant options start displaying as suggestions and autocomplete. We will try to achieve somewhat the same feature.
Search as you type
Elasticsearch gives this specific mapping type which you can simply set to a specific field where you want to perform this kind of search.</p>
<h1 id="why-search_as_you_type">Why <code>search_as_you_type</code>?</h1>
<p>No need to think about what kind of functionality like analyzer, tokenizer, etc. you have to apply to achieve this. It automatically handles everything in the backend by producing necessary terms on which you can query efficiently.</p>
<p>You can simply create mapping like the below example:</p>
<h2 id="create-index">Create Index</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>PUT products
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;mappings&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;properties&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;description&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;search_as_you_type&#34;</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><h2 id="insert-sample-data">Insert sample data</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>POST products/_doc/
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;description&#34;</span>: <span style="color:#e6db74">&#34;best jogging shoes for men&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><h2 id="how-is-data-indexed-">How is data indexed ?</h2>
<p><code>search_as_you_type</code> mapping creates 4 types of fields in the backend.</p>
<h3 id="field-1-description">Field 1: <code>description</code></h3>
<p>It will produce the terms according to the default analyzer if no analyzer is defined i.e. <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-standard-analyzer.html" target="_blank" rel="noopener">standard analyzer</a>
.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;men&#34;</span>
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><h3 id="field-2-description_2gram">Field 2: <code>description._2gram</code></h3>
<p>This will use a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-shingle-tokenfilter.html" target="_blank" rel="noopener">shingle token filter</a>
 and produce the terms with shingle size 2.
This means a shingle token filter produces the token by concatenating the adjacent token. You can find more <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-shingle-tokenfilter.html" target="_blank" rel="noopener">here</a>
.</p>
<p>This operation will perform on all the terms which are created on the <code>description</code> field and it will produce the below terms.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[ 
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for men&#34;</span>
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><h3 id="field-3-description_3gram">Field 3: <code>description._3gram</code></h3>
<p>This will also use a shingle token filter and produce the terms with shingle size 3. This means it will concatenate 3 adjacent tokens like below.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for men&#34;</span>
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><h3 id="field-4-description_index_prefix">Field 4: <code>description._index_prefix</code></h3>
<p>This will apply an <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-edgengram-tokenizer.html" target="_blank" rel="noopener">edge n gram token filter</a>
 on the field <code>description._3gram</code> which means it will split terms (words) of <code>description._3gram</code> to a small substring that will start from the edge.
You can have a look at the terms below.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;b&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;be&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;bes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best j&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jog&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogg&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best joggi&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best joggin&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging s&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging sh&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging sho&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging shoe&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;best jogging shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;j&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jog&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogg&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;joggi&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;joggin&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging s&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging sh&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging sho&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoe&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes f&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes fo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;jogging shoes for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;s&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;sh&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;sho&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoe&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes f&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes fo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for m&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for me&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;shoes for men&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;f&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;fo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for m&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for me&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for men&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;for men &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;m&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;me&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;men&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;men &#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;men  &#34;</span>
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><p>As you noticed the token limit is up to 3 words only because <code>description._3gram</code> has generated 3 word tokens only.</p>
<h1 id="search-query">Search Query</h1>
<h2 id="multi_match"><code>multi_match</code></h2>
<p>We will use a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html" target="_blank" rel="noopener">multi_match</a>
 query here. Because we want to look up on each subfield for a perfect match.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET products/_search
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;multi_match&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#e6db74">&#34;jogging&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;fields&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._2gram&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._3gram&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>The above query is going to search the term <code>&quot;jogging&quot;</code> on all 3 subfields which are specified in <code>fields[]</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;took&#34;</span> : <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;timed_out&#34;</span> : <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_shards&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;successful&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;skipped&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;failed&#34;</span> : <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;hits&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;value&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;relation&#34;</span> : <span style="color:#e6db74">&#34;eq&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;max_score&#34;</span> : <span style="color:#ae81ff">0.2876821</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;hits&#34;</span> : [
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;products&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;TSNNiX8BYh0NLleBiu4u&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">0.2876821</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;description&#34;</span> : <span style="color:#e6db74">&#34;best jogging shoes for men&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Lets try with any substring (<code>jog</code>).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET products/_search
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;multi_match&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#e6db74">&#34;jog&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;fields&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._2gram&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._3gram&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;took&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;timed_out&#34;</span> : <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_shards&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;successful&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;skipped&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;failed&#34;</span> : <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;hits&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;value&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;relation&#34;</span> : <span style="color:#e6db74">&#34;eq&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;max_score&#34;</span> : <span style="color:#66d9ef">null</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;hits&#34;</span> : [ ]
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The result is empty. Because there is no term created with the name <strong><code>jog</code></strong> if you closely look at the above generated tokens on respective fields.</p>
<p>To solve this we need to use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-bool-prefix-query.html" target="_blank" rel="noopener">bool_prefix</a>
 query.</p>
<p><code>bool_prefix</code> analyze the input and constructs the bool query from the terms. But it puts the last term in the prefix query. For example, input is given as <code>men jogging s</code>, So it will produce terms like <code>[&quot;men&quot;,&quot;jogging&quot;,&quot;s&quot;]</code> but it will always perform a prefix query on the last term which is <code>&quot;s&quot;</code>. So documents will return where terms will match with <code>&quot;men&quot;</code> or <code>&quot;jogging&quot;</code> or any term which is starting with <code>&quot;s&quot;</code>.</p>
<p>Below is the query which will give you the desired output.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET products/_search
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;multi_match&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#e6db74">&#34;jog&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;bool_prefix&#34;</span>, 
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;fields&#34;</span>: <span style="color:#f92672">[</span>
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._2gram&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#e6db74">&#34;description._3gram&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;took&#34;</span> : <span style="color:#ae81ff">4</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;timed_out&#34;</span> : <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_shards&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;successful&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;skipped&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;failed&#34;</span> : <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;hits&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;total&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;value&#34;</span> : <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;relation&#34;</span> : <span style="color:#e6db74">&#34;eq&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;max_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;hits&#34;</span> : [
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;products&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;TSNNiX8BYh0NLleBiu4u&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">&#34;description&#34;</span> : <span style="color:#e6db74">&#34;best jogging shoes for men&#34;</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Here when we make a prefix query on the root field (<code>description</code>) or any subfields, It will rewrite the query as a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html" target="_blank" rel="noopener">term</a>
 query on <code>description._index_prefix</code> field.</p>
<p>This matches more efficiently because prefixes up to 3 words are already created as the terms as shown in the above.</p>
<blockquote>
<p>Note: This query will search for terms irrespective of order. For example, if we search for <code>jogging men</code>, This will also give the result because it will search for both the terms <code>jogging</code> or <code>men</code>. In most of the cases this query (multi_match + bool_prefix) is recommended because the end user can search for any string like <code>shoes</code> or <code>shoes for men</code> or <code>jogging shoes</code> etc.</p>
</blockquote>
<h2 id="what-if-you-want-to-search-with-strict-prefix-order">What if you want to search with strict prefix order?</h2>
<p>You can use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html" target="_blank" rel="noopener">match_phrase_prefix</a>
, It will strictly match input from prefix in the same order only. So input like “men best” won’t return anything. Whereas you will get results with the previous one.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>GET products/_search
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;query&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;match_phrase_prefix&#34;</span>: <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#34;description&#34;</span>: <span style="color:#e6db74">&#34;best jogging s&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>It will return documents where the term&rsquo;s prefix will be matched with “best jogging s”. Sometimes it can provide confusing results. You can check more about <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html#match-phrase-prefix-autocomplete" target="_blank" rel="noopener">match_phrase_prefix</a>
.</p>
<h1 id="demo">Demo</h1>
<p>Let’s take a practical experience of how it is going to work.</p>
<h1 id="search-as-you-type-elasticsearch">Search As You Type (Elasticsearch)</h1>
<p>Demo code and sample employees data to implement the &ldquo;Search as you type&rdquo; feature on elasticsearch.</p>
<p>Written the middleware API in <code>python</code> using <a href="https://flask.palletsprojects.com/en/2.0.x/" target="_blank" rel="noopener">flask</a>
. Used <a href="https://jquery.com/" target="_blank" rel="noopener">JQuery</a>
 for javascript operations.</p>
<h2 id="installation">Installation</h2>
<p>Assuming you have successfully installed <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html" target="_blank" rel="noopener">Elasticsearch</a>
 and <a href="https://www.elastic.co/guide/en/kibana/current/install.html" target="_blank" rel="noopener">Kibana</a>
 on your machine and it is working perfectly. Kindly refer respective installation document.</p>
<p>OR</p>
<p>You can run <a href="https://cloud.elastic.co/registration" target="_blank" rel="noopener">Elasticsearch on the cloud</a>
 with a few clicks.</p>
<h3 id="install-python3--pip3">Install Python3 &amp; pip3</h3>
<ol>
<li>Refer <a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Document</a>
 to install <code>python3</code> &amp; <code>pip3</code> on your system.</li>
<li>Install <code>flask</code></li>
</ol>
<pre tabindex="0"><code>pip3 install flask
</code></pre><ol start="3">
<li>Install <code>elasticsearch</code> package</li>
</ol>
<pre tabindex="0"><code>pip3 install elasticsearch
</code></pre><h3 id="git-clone">git Clone</h3>
<pre tabindex="0"><code>git clone https://github.com/ashishtiwari1993/search_as_you_type.git
cd search_as_you_type
</code></pre><h3 id="create-index-and-load-data">Create Index and load data</h3>
<p>Make sure Elasticsearch and kibana are up and running fine on your machine.</p>
<h4 id="create-index-1">Create Index</h4>
<pre tabindex="0"><code>PUT /sayt?pretty
{
  &#34;mappings&#34;: {
    &#34;properties&#34;: {
      &#34;first_name&#34;: {
        &#34;type&#34;: &#34;search_as_you_type&#34;
      },
      &#34;last_name&#34;: {
        &#34;type&#34;: &#34;search_as_you_type&#34;
      },
      &#34;street_address&#34;: {
        &#34;type&#34;: &#34;search_as_you_type&#34;
      },
      &#34;company&#34;: {
        &#34;type&#34;: &#34;search_as_you_type&#34;
      },
      &#34;email&#34;: {
        &#34;type&#34;: &#34;search_as_you_type&#34;
      }
    }
  }
}
</code></pre><h4 id="load-sample-data">Load sample data</h4>
<p>Sample <a href="https://github.com/ashishtiwari1993/search_as_you_type/blob/main/data.json" target="_blank" rel="noopener">data.json</a>
 file is given which need to load with the help of <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html" target="_blank" rel="noopener">bulk API</a>
.</p>
<pre tabindex="0"><code>curl -s -H &#34;Content-Type: application/x-ndjson&#34; -XPOST &#34;localhost:9200/_bulk&#34; --data-binary &#34;@data.json&#34;
</code></pre><p>Do not forget to change the elasticsearch&rsquo;s endpoint.</p>
<h3 id="run-apipy--test">Run <code>api.py</code> &amp; test</h3>
<p>Open <code>api.py</code> and change elasticsearch endpoint accordingly.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-py" data-lang="py"><span style="display:flex;"><span>es <span style="color:#f92672">=</span> Elasticsearch(<span style="color:#e6db74">&#34;http://localhost:9200&#34;</span>)
</span></span></code></pre></div><h4 id="start-api-server">Start API Server</h4>
<pre tabindex="0"><code>python3 api.py
</code></pre><p>This will start the API service on port <code>5001</code>.</p>
<p>Open <code>index.html</code> on your browser.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Parse custom logs in Elasticsearch using grok_pattern</title>
      <link>https://ashish.one/talks/devops-conf-2022/</link>
      <pubDate>Sun, 06 Mar 2022 14:30:32 +0530</pubDate>
      <guid>https://ashish.one/talks/devops-conf-2022/</guid>
      <description>Introduction In the talk, Quickly showed how you can use the metricbeat to check system health. With a few clicks, you can start monitoring your infra.
Another demo shows, How you can parse your custom unstructured logs to Elasticsearch. There is some utility already available for predefined logs format like json, apache, nginx and system logs etc.
But if you have different requirement where you need to parse a different types of log format , You can parse using Grok processor .</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<p>In the talk, Quickly showed how you can use the <a href="https://www.elastic.co/beats/metricbeat" target="_blank" rel="noopener">metricbeat</a>
 to check system health. With a few clicks, you can start monitoring your infra.</p>
<p>Another demo shows, How you can parse your custom unstructured logs to Elasticsearch. There is some utility already available for predefined logs format like json, apache, nginx and system logs etc.</p>
<p>But if you have different requirement where you need to parse a different types of log format , You can parse using <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html" target="_blank" rel="noopener">Grok processor</a>
.</p>
<p>Also explained how you can read custom logs from log files in real time and ingest to Elasticsearch.</p>
<h1 id="slides">Slides</h1>
<div id="Container"
 style="padding-bottom:56.25%; position:relative; display:block; width: 100%">
 <iframe id="googleSlideIframe"
  width="100%" height="100%"
  src="https://docs.google.com/presentation/d/e/2PACX-1vQtGa1x8-WMwWX8MTMZ-8GdJDMmiro4dNwcIE5HHmj1oGaSs88znwGf-W8bwUSANkIRQkeMZnh8KfWs/embed?start=false&amp;loop=false&amp;delayms=3000"
  frameborder="0" allowfullscreen=""
  style="position:absolute; top:0; left: 0"></iframe>
</div>

<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/owyv9sQE7q8?start=4856&amp;end=9427" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h4 id="feel-free-to-comment-below-if-you-have-any-doubts-or-suggestion-about-this-talk">Feel free to comment below, If you have any doubts or suggestion about this talk.</h4>
]]></content:encoded>
    </item>
    <item>
      <title>Deploy Elasicsearch on Azure cloud</title>
      <link>https://ashish.one/talks/deploy_elastic_on_azure/</link>
      <pubDate>Sat, 29 Jan 2022 19:24:45 +0000</pubDate>
      <guid>https://ashish.one/talks/deploy_elastic_on_azure/</guid>
      <description>Introduction What this talk is all about ? The purpose of the talk is to give a short overview of Elastic solutions &amp;amp; Elastic stacks. In the demo shown, how you can deploy elasticsearch instance on Microsoft Azure.
Also, it gives an idea to use the elastic cloud to manage the elasticsearch instance which deployed on the Azure cloud. You can also create deployment on elastic cloud (cloud.elastic.co ).
In the demo, Successfully shipped the metric data of the local system (my MacBook) to the newly deployed elasticsearch instance and explored the dashboard on kibana.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<h2 id="what-this-talk-is-all-about-">What this talk is all about ?</h2>
<p>The purpose of the talk is to give a short overview of Elastic solutions &amp; Elastic stacks. In the demo shown, how you can deploy elasticsearch instance on Microsoft Azure.</p>
<p>Also, it gives an idea to use the elastic cloud to manage the elasticsearch instance which deployed on the Azure cloud. You can also create deployment on elastic cloud (<a href="https://cloud.elastic.co" target="_blank" rel="noopener">cloud.elastic.co</a>
).</p>
<p>In the demo, Successfully shipped the metric data of the local system (my MacBook) to the newly deployed elasticsearch instance and explored the dashboard on kibana.</p>
<h2 id="slides">Slides</h2>
<div id="Container"
 style="padding-bottom:56.25%; position:relative; display:block; width: 100%">
 <iframe id="googleSlideIframe"
  width="100%" height="100%"
  src="https://docs.google.com/presentation/d/e/2PACX-1vR9COL0Pod4Hdhc3OlkIPorb-UM0DtbhSgcqQajOYV789jbmRYsffyIRVR0cFCnm8eu80sF8-khLc0K/embed?start=false&amp;loop=false&amp;delayms=3000"
  frameborder="0" allowfullscreen=""
  style="position:absolute; top:0; left: 0"></iframe>
</div>

<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/O2HdAA5o1i4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h4 id="feel-free-to-comment-below-if-you-have-any-doubts-or-suggestion-about-this-talk">Feel free to comment below, If you have any doubts or suggestion about this talk.</h4>
]]></content:encoded>
    </item>
    <item>
      <title>Shipping Golang logs with ELKB stack</title>
      <link>https://ashish.one/blogs/shipping-golang-logs-with-elkb-stack/</link>
      <pubDate>Sat, 06 Jun 2020 23:31:33 +0530</pubDate>
      <guid>https://ashish.one/blogs/shipping-golang-logs-with-elkb-stack/</guid>
      <description>Goal of this blog In this blog, I am going to show you how easily we can write logs to the files in Golang. As well as we are going to store all logs on elasticsearch with EKB (Elasticsearch, Kibana, Beats).
Why ELKB stack ? Logs are very important for debugging, reporting, insights etc. In today&amp;rsquo;s tech world, We uses multiple cloud servers, private servers etc. Which consist of lots of different applications, scripts, programs, daemons, services and they generate their logs too.</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="/img/go-elk-logs/banner.png" alt="Go ship logs with ELK Banner"  />
</p>
<h2 id="goal-of-this-blog">Goal of this blog</h2>
<p>In this blog, I am going to show you how easily we can write logs to the files in Golang. As well as we are going  to store all logs on elasticsearch with EKB (Elasticsearch, Kibana, Beats).</p>
<h2 id="why-elkb-stack-">Why ELKB stack ?</h2>
<p>Logs are very important for debugging, reporting, insights etc. In today&rsquo;s tech world, We uses multiple cloud servers, private servers etc. Which consist of lots of different applications, scripts, programs, daemons, services and they generate their logs too. It is very difficult to go to each server and check all log files in case of debugging or to generate any insights or reporting.</p>
<p>In my case I used to go to every server and perform <code>grep</code>  on log files.</p>
<p>ELKB Gives you an easy setup to move all yours logs into one central Place which is Elasticsearch &amp; With a beautiful kibana interface, You can visualize all your logs. You can also make various types of dashboards.</p>
<p>This is a very small use case I am going to convert but you can find lots of big problem solving use cases on the internet about ELKB.</p>
<p>I will not go much deeper about ELKB stack. You can find a wonderful explanation on elastic.co.</p>
<h2 id="two-parts">Two Parts:</h2>
<ol>
<li>Write JSON logs to the file in Go</li>
<li>Shift All JSON logs on Elasticsearch</li>
</ol>
<h2 id="my-configuration">My Configuration</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>OS: ubuntu 18.04
</span></span><span style="display:flex;"><span>Go version: go version go1.13 linux/amd64
</span></span><span style="display:flex;"><span>Elasticsearch version: 7.7.1
</span></span><span style="display:flex;"><span>Filebeat version: filebeat version 7.7.1 <span style="color:#f92672">(</span>amd64<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Kibana version: 7.7.1
</span></span></code></pre></div><h2 id="1-write-json-logs-to-the-file-in-go">1. Write JSON logs to the file in Go</h2>
<p>I am assuming you have already installed Go on your machine. If not then you can refer to the installation guide <a href="https://golang.org/doc/install" target="_blank" rel="noopener">here</a>
.</p>
<h3 id="my-golang-version">My Golang version:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>go version go1.13 linux/amd64
</span></span></code></pre></div><h3 id="logrushttpsgodocorggithubcomsirupsenlogrus"><a href="https://godoc.org/github.com/sirupsen/logrus" target="_blank" rel="noopener">Logrus</a>
</h3>
<p>This is a wonderful package available to write logs. Below is the short example of using logrus package:</p>
<h4 id="1-install-logrus-package">1. Install Logrus package</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>go install github.com/sirupsen/logru
</span></span></code></pre></div><h4 id="2-create-loggo-and-paste-the-below-code">2. Create <code>log.go</code> and paste the below code</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#f92672">package</span> <span style="color:#a6e22e">main</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> (
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;os&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span> <span style="color:#e6db74">&#34;github.com/sirupsen/logrus&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">func</span> <span style="color:#a6e22e">init</span>() {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">_</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">os</span>.<span style="color:#a6e22e">OpenFile</span>(<span style="color:#e6db74">&#34;/tmp/go_logs/example.log&#34;</span>, <span style="color:#a6e22e">os</span>.<span style="color:#a6e22e">O_RDWR</span>|<span style="color:#a6e22e">os</span>.<span style="color:#a6e22e">O_CREATE</span>|<span style="color:#a6e22e">os</span>.<span style="color:#a6e22e">O_APPEND</span>, <span style="color:#ae81ff">0666</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">SetFormatter</span>(<span style="color:#f92672">&amp;</span><span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">JSONFormatter</span>{})
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">SetOutput</span>(<span style="color:#a6e22e">f</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">func</span> <span style="color:#a6e22e">main</span>() {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">WithFields</span>(<span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">Fields</span>{
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;event&#34;</span>: <span style="color:#e6db74">&#34;create_profile&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;user_id&#34;</span>:   <span style="color:#ae81ff">10</span>,
</span></span><span style="display:flex;"><span>  }).<span style="color:#a6e22e">Info</span>(<span style="color:#e6db74">&#34;This is an info message.&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">WithFields</span>(<span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">Fields</span>{
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;event&#34;</span>: <span style="color:#e6db74">&#34;delete_profile&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;user_id&#34;</span>: <span style="color:#ae81ff">11</span>,
</span></span><span style="display:flex;"><span>  }).<span style="color:#a6e22e">Warn</span>(<span style="color:#e6db74">&#34;This is a warning message.&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">WithFields</span>(<span style="color:#a6e22e">log</span>.<span style="color:#a6e22e">Fields</span>{
</span></span><span style="display:flex;"><span>		<span style="color:#e6db74">&#34;event&#34;</span> : <span style="color:#e6db74">&#34;edit_profile&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;user_id&#34;</span>: <span style="color:#ae81ff">13</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#e6db74">&#34;package&#34;</span> : <span style="color:#e6db74">&#34;main&#34;</span>,
</span></span><span style="display:flex;"><span>  }).<span style="color:#a6e22e">Fatal</span>(<span style="color:#e6db74">&#34;This is a critical message.&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Here I have specified the log file /tmp/go_logs/example.log.  You can specify according to your need. We also specified the log format <code>JSON</code>.</p>
<h4 id="3-lets-run-the-loggo">3. Lets run the <code>log.go</code></h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ go run log.go
</span></span></code></pre></div><h4 id="4-check-log-file">4. Check log file:</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ cat /tmp/go_logs/example.log
</span></span></code></pre></div><p>Output</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{<span style="color:#f92672">&#34;event&#34;</span>:<span style="color:#e6db74">&#34;create_profile&#34;</span>,<span style="color:#f92672">&#34;level&#34;</span>:<span style="color:#e6db74">&#34;info&#34;</span>,<span style="color:#f92672">&#34;msg&#34;</span>:<span style="color:#e6db74">&#34;This is an info message.&#34;</span>,<span style="color:#f92672">&#34;time&#34;</span>:<span style="color:#e6db74">&#34;2020-06-06T22:51:30+05:30&#34;</span>,<span style="color:#f92672">&#34;user_id&#34;</span>:<span style="color:#ae81ff">10</span>}
</span></span><span style="display:flex;"><span>{<span style="color:#f92672">&#34;event&#34;</span>:<span style="color:#e6db74">&#34;delete_profile&#34;</span>,<span style="color:#f92672">&#34;level&#34;</span>:<span style="color:#e6db74">&#34;warning&#34;</span>,<span style="color:#f92672">&#34;msg&#34;</span>:<span style="color:#e6db74">&#34;This is a warning message.&#34;</span>,<span style="color:#f92672">&#34;time&#34;</span>:<span style="color:#e6db74">&#34;2020-06-06T22:51:30+05:30&#34;</span>,<span style="color:#f92672">&#34;user_id&#34;</span>:<span style="color:#ae81ff">11</span>}
</span></span><span style="display:flex;"><span>{<span style="color:#f92672">&#34;event&#34;</span>:<span style="color:#e6db74">&#34;edit_profile&#34;</span>,<span style="color:#f92672">&#34;level&#34;</span>:<span style="color:#e6db74">&#34;fatal&#34;</span>,<span style="color:#f92672">&#34;msg&#34;</span>:<span style="color:#e6db74">&#34;This is a critical message.&#34;</span>,<span style="color:#f92672">&#34;package&#34;</span>:<span style="color:#e6db74">&#34;main&#34;</span>,<span style="color:#f92672">&#34;time&#34;</span>:<span style="color:#e6db74">&#34;2020-06-06T22:51:30+05:30&#34;</span>,<span style="color:#f92672">&#34;user_id&#34;</span>:<span style="color:#ae81ff">13</span>}
</span></span></code></pre></div><p>Here I have used the log format <code>JSON</code>. Every log will be written in JSON format on the newline. You can check more features about logrus <a href="https://github.com/sirupsen/logrus" target="_blank" rel="noopener">here</a>
.</p>
<h2 id="2-shift-all-json-logs-on-elasticsearch">2. Shift All JSON logs on Elasticsearch</h2>
<p>This part has no dependency on the above part. You can use any <code>JSON</code> log file irrespective of any language.</p>
<p>Before start I am assuming you have installed Elasticsearch, Filebeat &amp; Kibana on your machine. If not then refer below link:</p>
<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html" target="_blank" rel="noopener">Install Elasticsearch</a>
</li>
<li><a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html" target="_blank" rel="noopener">Install Filebeat</a>
</li>
<li><a href="https://www.elastic.co/guide/en/kibana/current/install.html" target="_blank" rel="noopener">Install Kibana</a>
</li>
</ul>
<blockquote>
<p><strong>Note: In this part we are not going to use Logstash.</strong></p>
</blockquote>
<h3 id="1-start-elasticsearch-service">1. Start Elasticsearch Service</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ service elasticsearch start
</span></span></code></pre></div><p>It will run on port 9200. You can verify with the below command or just hit <code>localhost:9200</code> on your browser.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ashish@ashish-laptop:~$ curl localhost:9200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;name&#34;</span> : <span style="color:#e6db74">&#34;753853fa62d1&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;cluster_name&#34;</span> : <span style="color:#e6db74">&#34;docker-cluster&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;cluster_uuid&#34;</span> : <span style="color:#e6db74">&#34;JLlH0Z0pQqWjGEHO8MQgZQ&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;version&#34;</span> : <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;number&#34;</span> : <span style="color:#e6db74">&#34;7.7.1&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;build_flavor&#34;</span> : <span style="color:#e6db74">&#34;default&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;build_type&#34;</span> : <span style="color:#e6db74">&#34;docker&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;build_hash&#34;</span> : <span style="color:#e6db74">&#34;ad56dce891c901a492bb1ee393f12dfff473a423&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;build_date&#34;</span> : <span style="color:#e6db74">&#34;2020-05-28T16:30:01.040088Z&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;build_snapshot&#34;</span> : false,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;lucene_version&#34;</span> : <span style="color:#e6db74">&#34;8.5.1&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;minimum_wire_compatibility_version&#34;</span> : <span style="color:#e6db74">&#34;6.8.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;minimum_index_compatibility_version&#34;</span> : <span style="color:#e6db74">&#34;6.0.0-beta1&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;tagline&#34;</span> : <span style="color:#e6db74">&#34;You Know, for Search&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><h3 id="2-start-kibana-service">2. Start Kibana service</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ service kibana start
</span></span></code></pre></div><p>It will run on port 5601. You can verify by visiting <code>localhost:5601</code> from your browser. You should see the kibana dashboard.</p>
<h3 id="3-edit-filebeatyml">3. Edit <code>filebeat.yml</code></h3>
<p>Open <code>filebeat.yml</code>. Add below snippet in <code>filebeat.inputs</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">filebeat.inputs</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>- <span style="color:#f92672">type</span>: <span style="color:#ae81ff">log</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">enabled</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">paths</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#ae81ff">/tmp/go_logs/*.log</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">json.add_error_key</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">output.elasticsearch</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># Array of hosts to connect to.</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">hosts</span>: [<span style="color:#e6db74">&#34;localhost:9200&#34;</span>]
</span></span></code></pre></div><p>You can check on below link to know more about filebeat log input &amp; JSON decoding</p>
<p><a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html</a>
</p>
<p><a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html#filebeat-input-log-config-json" target="_blank" rel="noopener">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html#filebeat-input-log-config-json</a>
</p>
<h3 id="4-restart-filebeat">4. Restart Filebeat</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ service filebeat restart
</span></span></code></pre></div><h2 id="verify-if-data-indexed-on-elasticsearch">Verify If Data Indexed on Elasticsearch</h2>
<h3 id="check-logs">Check Logs</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ tail -f /var/log/filebeat/filebeat
</span></span></code></pre></div><h3 id="check-indices">Check Indices:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ curl localhost:9200/_cat/indices?v
</span></span></code></pre></div><p>Or you can simply visit <code>localhost:9200/_cat/indices?v</code> on your browser.</p>
<p>Output:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>health status index                            uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span></span><span style="display:flex;"><span>green  open   .apm-custom-link                 xp0mitnBQtijaZ9tEgan_g   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">0</span>          <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">0</span>       208b           208b
</span></span><span style="display:flex;"><span>green  open   .kibana_task_manager_1           7Q4mMTYxRhCB6sfnQ2ibmA   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">0</span>          <span style="color:#ae81ff">5</span>            <span style="color:#ae81ff">0</span>       34kb           34kb
</span></span><span style="display:flex;"><span>green  open   .apm-agent-configuration         3piA79spTbGWAVItYL3PlQ   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">0</span>          <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">0</span>       208b           208b
</span></span><span style="display:flex;"><span>yellow open   filebeat-7.7.1-2020.06.06-000001 nsFk7mOuTguIfaPSbeM3PA   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">19</span>            <span style="color:#ae81ff">0</span>     74.9kb         74.9kb
</span></span><span style="display:flex;"><span>green  open   .kibana_1                        LBmzoJspR8a8HAcs9WGr8g   <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">0</span>         <span style="color:#ae81ff">54</span>            <span style="color:#ae81ff">0</span>    171.6kb        171.6kb
</span></span></code></pre></div><p>As you can see a new index is created by filebeat with the name <code>filebeat-7.7.1-2020.06.06-000001</code>. In your case index name can be different but it will start with <code>filebeat*</code>.</p>
<p>Index lifecycle will be handled by filebeat. You don’t need to worry about that.</p>
<h3 id="check-documents">Check Documents</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ curl localhost:9200/filebeat-7.7.1-2020.06.06-000001/_search?pretty
</span></span></code></pre></div><p>Sample Output:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_index&#34;</span> : <span style="color:#e6db74">&#34;filebeat-7.7.1-2020.06.06-000001&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_type&#34;</span> : <span style="color:#e6db74">&#34;_doc&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_id&#34;</span> : <span style="color:#e6db74">&#34;4qW3inIBVJJF9hMQm_yi&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_score&#34;</span> : <span style="color:#ae81ff">1.0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;_source&#34;</span> : {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;@timestamp&#34;</span> : <span style="color:#e6db74">&#34;2020-06-06T17:39:47.208Z&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;log&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;offset&#34;</span> : <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;file&#34;</span> : {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;path&#34;</span> : <span style="color:#e6db74">&#34;/tmp/go_logs/ashish.log&#34;</span>
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;json&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;msg&#34;</span> : <span style="color:#e6db74">&#34;This is an info message.&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;time&#34;</span> : <span style="color:#e6db74">&#34;2020-06-06T23:09:26+05:30&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;user_id&#34;</span> : <span style="color:#ae81ff">10</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;event&#34;</span> : <span style="color:#e6db74">&#34;create_profile&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;level&#34;</span> : <span style="color:#e6db74">&#34;info&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;input&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;type&#34;</span> : <span style="color:#e6db74">&#34;log&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;host&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;name&#34;</span> : <span style="color:#e6db74">&#34;ashish-laptop&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;agent&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;version&#34;</span> : <span style="color:#e6db74">&#34;7.7.1&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;type&#34;</span> : <span style="color:#e6db74">&#34;filebeat&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;ephemeral_id&#34;</span> : <span style="color:#e6db74">&#34;3f53f9c1-66a0-4e93-85fa-1532221c9670&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;hostname&#34;</span> : <span style="color:#e6db74">&#34;ashish-laptop&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;id&#34;</span> : <span style="color:#e6db74">&#34;72976284-d927-49d1-abcb-1d2a5be15176&#34;</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;ecs&#34;</span> : {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;version&#34;</span> : <span style="color:#e6db74">&#34;1.5.0&#34;</span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Your data will be saved on the <code>json</code> key. Another is metadata which is added by filebeat. Filebeat provides lots of options, features &amp; settings. You can use it according to your requirements.</p>
<h3 id="logs-on-kibana">Logs on Kibana</h3>
<p>Visit on <code>localhost:5601</code> from your browser. Create index pattern with the pattern <code>filebeat*</code>. Check <a href="https://www.elastic.co/guide/en/kibana/current/tutorial-define-index.html" target="_blank" rel="noopener">here</a>
 for more details.</p>
<p>Once you are done with defining the index pattern, Go to <code>Discover</code> section, Here you will see all your logs.</p>
<p><img loading="lazy" src="/img/go-elk-logs/kibana.png" alt="Kibana-discover"  />
</p>
<p>You can query on your logs. You can apply filters &amp; create various types of dashboard to get better insights from your logs. You can find a wonderful explanation on the official site.</p>
<h2 id="in-the-end">In the end</h2>
<p>We have successfully shipped our logs on Elasticsearch. This is only a small use case of ELKB Stack. It provides much more than this. You can explore more on the internet.</p>
<p>Put your comments if you have any doubts.</p>
]]></content:encoded>
    </item>
    <item>
      <title>How to scale with massive update queries in Elasticsearch?</title>
      <link>https://ashish.one/talks/scale-with-massive-updates-queries-in-elasticsearch/</link>
      <pubDate>Sun, 08 Dec 2019 20:26:06 +0530</pubDate>
      <guid>https://ashish.one/talks/scale-with-massive-updates-queries-in-elasticsearch/</guid>
      <description>Introduction What this talk is all about? We recently moved from MySQL to Elasticsearch where we got a direct 10x - 15x boost in our performance.
We came up with unique use cases of heavy updates in Elasticsearch. That been challenging but yes currently Our Elaticsearch handling 200 million requests per day very efficiently. Our WRITE consist of the partial update, update with script conditions and of course simple indexing.</description>
      <content:encoded><![CDATA[<h1 id="introduction">Introduction</h1>
<h2 id="what-this-talk-is-all-about">What this talk is all about?</h2>
<p>We recently moved from MySQL to Elasticsearch where we got a direct 10x - 15x boost in our performance.</p>
<p>We came up with unique use cases of heavy updates in Elasticsearch. That been challenging but yes currently Our Elaticsearch handling 200 million requests per day very efficiently. Our WRITE consist of the partial update, update with script conditions and of course simple indexing.</p>
<p>Our READ request is 1 million/day which contains Scroll, simple search &amp; Aggregations Query. We achieved to display our email logs in next to real-time.
We also worked on Disk optimization by believing in the principle of &ldquo;Know your query&rdquo;. Currently having 6TB + of the cluster with 80 GB ingestion per day.</p>
<h2 id="slides">Slides</h2>
<div id="Container"
 style="padding-bottom:56.25%; position:relative; display:block; width: 100%">
 <iframe id="googleSlideIframe"
  width="100%" height="100%"
  src="https://docs.google.com/presentation/d/e/2PACX-1vRiOzGgkrN1dO7fD4MDUKzr8WIhHqIhS5Iw1N27_mxYVdtPYcK17ib6ZTdg3bgExVuccJ35vxUSNP3X/embed?start=false&amp;loop=false&amp;delayms=3000"
  frameborder="0" allowfullscreen=""
  style="position:absolute; top:0; left: 0"></iframe>
</div>

<h2 id="talk-video">Talk Video</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/NSZXMv0va74" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<!-- raw HTML omitted -->
<h4 id="feel-free-to-comment-below-if-you-have-any-doubts-or-suggestion-about-this-talk">Feel free to comment below, If you have any doubts or suggestion about this talk.</h4>
]]></content:encoded>
    </item>
    <item>
      <title>Elasticsearch Exceptions &amp; Challenges</title>
      <link>https://ashish.one/blogs/elasticsearch-exceptions-and-challenges/</link>
      <pubDate>Tue, 03 Dec 2019 02:47:28 +0530</pubDate>
      <guid>https://ashish.one/blogs/elasticsearch-exceptions-and-challenges/</guid>
      <description>Below are some challenges &amp;amp; exceptions faced while setting up Elasticsearch. I just shared my experience and learning. Please correct me, If you guys feel somewhere i got wrong OR You can contribute if you have any experiences . Will keep update this gist.
Every use case having different solutions. You can try accordingly.</description>
      <content:encoded><![CDATA[<p>Below are some challenges &amp; exceptions faced while setting up Elasticsearch. I just shared my experience and learning. Please correct me, If you guys feel somewhere i got wrong OR You can contribute if you have any experiences . Will keep update this gist.</p>
<p><script type="application/javascript" src="https://gist.github.com/ashishtiwari1993/004a19f4a44efc214403a7fc1ee27cda.js"></script>

Every use case having different solutions. You can try accordingly.</p>
]]></content:encoded>
    </item>
    <item>
      <title>What should be the value of max_gram and min_gram in Elasticsearch?</title>
      <link>https://ashish.one/blogs/min-gram-and-max-gram-elasticsearch/</link>
      <pubDate>Sun, 22 Sep 2019 15:20:39 +0530</pubDate>
      <guid>https://ashish.one/blogs/min-gram-and-max-gram-elasticsearch/</guid>
      <description>I was working on elasticsearch and the requirement was to implement like query “%text%” ( like mysql %like% ). We could use wildcard, regex or query string but those are slow. Hence i took decision to use ngram token filter for like query. It was quickly implemented on local and works exactly i want.
The problem To know the actual behavior, I implemented the same on staging server. I found some problem while we start indexing on staging.</description>
      <content:encoded><![CDATA[<p>I was working on elasticsearch and the requirement was to implement like query “%text%” ( like mysql %like% ). We could use wildcard, regex or query string but those are slow. Hence i took decision to use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/analysis-ngram-tokenfilter.html" target="_blank" rel="noopener">ngram token filter</a>
 for like query. It was quickly implemented on local and works exactly i want.</p>
<h2 id="the-problem">The problem</h2>
<p>To know the actual behavior, I implemented the same on staging server. I found some problem while we start indexing on staging.</p>
<ol>
<li>Storage size was directly increase by 8x, Which was too risky. In my previous index the string type was “keyword”. Its took approx 43 gb to store the same data. I implemented a new schema for “like query” with ngram filter which took below storage to store same data.</li>
</ol>
<pre tabindex="0"><code>curl -XGET http://localhost:9200/_cat/indices?v

index       docs.count  pri.store.size
ngram-test  459483245   329.5gb
</code></pre><ol start="2">
<li>Sometime like query was not behaving properly. Not getting exact output.</li>
</ol>
<h2 id="schema">Schema</h2>
<pre tabindex="0"><code>curl -XPUT &#34;localhost:9200/ngram-test?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;
{
  &#34;settings&#34;:{
    &#34;index&#34;:{
      &#34;number_of_shards&#34;:5,
      &#34;number_of_replicas&#34;:0,
      &#34;codec&#34;: &#34;best_compression&#34;
    },
    &#34;analysis&#34;:{
      &#34;filter&#34;:{
        &#34;like_filter&#34;:{
          &#34;type&#34;:&#34;ngram&#34;,
          &#34;min_gram&#34;:3,
          &#34;max_gram&#34;:10,
          &#34;token_chars&#34;:[
            &#34;letter&#34;,
            &#34;digit&#34;,
            &#34;symbol&#34;
          ]
        }
      },
      &#34;analyzer&#34;:{
        &#34;like_analyzer&#34;:{
          &#34;type&#34;:&#34;custom&#34;,
          &#34;tokenizer&#34;:&#34;keyword&#34;,
          &#34;filter&#34;:[
            &#34;lowercase&#34;,
            &#34;like_filter&#34;
          ]
        }
      }
    }
  },
  &#34;mappings&#34;:{
    &#34;logs&#34;:{
      &#34;properties&#34;:{
        &#34;email&#34;:{
          &#34;type&#34;:&#34;keyword&#34;,
          &#34;fields&#34;:{
            &#34;text&#34;:{
              &#34;analyzer&#34;:&#34;like_analyzer&#34;,
              &#34;search_analyzer&#34;:&#34;like_analyzer&#34;,
              &#34;type&#34;:&#34;text&#34;
            }
          }
        }
      }
    }
  }
}&#39;
</code></pre><h2 id="analyzing-the-behavior-of-ngram-filter">Analyzing the behavior of ngram filter</h2>
<p>We made one test index and start monitoring by inserting doc one by one.</p>
<p><a href="https://medium.com/@ashishstiwari/what-should-be-the-value-of-max-gram-and-min-gram-in-elasticsearch-f091404c9a14" target="_blank" rel="noopener">Continue Reading</a>
</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
